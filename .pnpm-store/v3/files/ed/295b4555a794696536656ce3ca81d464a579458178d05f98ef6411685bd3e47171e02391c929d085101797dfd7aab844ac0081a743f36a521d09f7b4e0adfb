{"mappings":"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","sources":["packages/components/utils/src/index.ts","packages/components/utils/src/Portal/Portal.tsx","packages/components/utils/src/useKeyboard/useKeyboard.ts","packages/components/utils/src/getStringMatch/getStringMatch.ts"],"sourcesContent":["export { Portal } from './Portal/Portal';\nexport type { PortalProps } from './Portal/Portal';\nexport { useKeyboard } from './useKeyboard/useKeyboard';\nexport type { UseKeyboardProps } from './useKeyboard/useKeyboard';\nexport { getStringMatch } from './getStringMatch/getStringMatch';\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport interface PortalProps {\n  children: React.ReactElement;\n  /**\n   * Container element for Portal\n   */\n  container?: Document | HTMLElement;\n}\n\nexport function Portal({\n  children,\n  container: containerElement,\n}: PortalProps): React.ReactPortal | null {\n  const container = useRef<Document | HTMLElement | undefined>(\n    containerElement,\n  );\n  const portal = useRef<HTMLDivElement>(document.createElement('div'));\n\n  useEffect(() => {\n    if (!container.current) {\n      container.current = document.body;\n    }\n\n    const portalContainer = portal.current;\n    portalContainer.setAttribute('data-cf-ui-portal', '');\n    container.current.appendChild(portalContainer);\n\n    return () => {\n      if (container.current) {\n        container.current.removeChild(portalContainer);\n      }\n    };\n  }, []);\n\n  return portal.current ? createPortal(children, portal.current) : null;\n}\n","import { useEffect, useCallback, MutableRefObject } from 'react';\n\nexport interface UseKeyboardProps {\n  /**\n   * Object of key names and handlers defines which key to look for i.e. `ArrowUp`, `Escape`, `Shift`\n   * value is a callback function to be called when key matches\n   */\n  keys: {\n    [key: string]: (e: KeyboardEvent) => void;\n  };\n  /**\n   * Defines the attached event type\n   * @default 'keydown'\n   */\n  event?: 'keyup' | 'keypress' | 'keydown';\n\n  /**\n   * React reference to attach the event to its current element\n   */\n  ref?: MutableRefObject<HTMLElement>;\n}\n\n/**\n *\n * @description hook to attach a handler keyboard event listener to `document` or `HTMLElements` with garbage collection\n * @example\n * useKeyboard({\n *  event: 'keydown', // Optional, default is `keydown`\n *  ref: yourReactRef, // Optional, by default event is attached to document\n *  keys: {\n *    ArrowUp: (e) => handleArrowUp(e),\n *    Tab: (e) => handleTab(e)\n *  }\n * })\n */\nexport const useKeyboard = (props: UseKeyboardProps) => {\n  const { ref, keys, event = 'keydown' } = props;\n  let element: HTMLElement | Document = document;\n\n  const handleKeyEvent = useCallback(\n    (e) => {\n      const isKey = Object.prototype.hasOwnProperty.call(keys, e.key);\n      if (isKey) {\n        keys[e.key](e);\n      }\n    },\n    [keys],\n  );\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      element = ref.current;\n    }\n\n    element.addEventListener(event, handleKeyEvent);\n    return () => {\n      element.removeEventListener(event, handleKeyEvent);\n    };\n  }, [event, handleKeyEvent]);\n};\n","export interface MatchObj {\n  before: string;\n  match: string;\n  after: string;\n}\n\n/**\n * Function that can be used to find a substring inside another string.\n * It needs two strings, the second one will be used in a Regex expression\n * to be matched to the first one.\n * The function will return an object containing the match, what comes before the match,\n * and what comes after the match in the base string\n *\n * @param base\n * @param match\n */\nexport function getStringMatch(base: string, match: string): MatchObj {\n  const matchResult = { before: '', match: '', after: '' };\n\n  const regex = new RegExp(`(?<before>.*?)(?<match>${match})(?<after>.*)`, 'i');\n  const matches = base.match(regex);\n\n  if (matches) {\n    matchResult.before = matches.groups.before;\n    matchResult.match = matches.groups.match;\n    matchResult.after = matches.groups.after;\n  }\n\n  return matchResult;\n}\n"],"names":["Portal","PortalProps","useKeyboard","UseKeyboardProps","getStringMatch","useEffect","useRef","createPortal","children","React","ReactElement","container","Document","HTMLElement","containerElement","ReactPortal","portal","HTMLDivElement","document","createElement","current","body","portalContainer","setAttribute","appendChild","removeChild","useCallback","MutableRefObject","keys","key","e","KeyboardEvent","event","ref","props","element","handleKeyEvent","isKey","Object","prototype","hasOwnProperty","call","addEventListener","removeEventListener","MatchObj","before","match","after","base","matchResult","regex","RegExp","matches","groups"],"version":3,"file":"module.js.map"}