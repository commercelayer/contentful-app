{"mappings":"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","sources":["packages/components/workbench/src/index.ts","packages/components/workbench/src/CompoundWorkbench.tsx","packages/components/workbench/src/Workbench.tsx","packages/components/workbench/src/Workbench.styles.ts","packages/components/workbench/src/WorkbenchHeader/index.ts","packages/components/workbench/src/WorkbenchHeader/WorkbenchHeader.tsx","packages/components/workbench/src/WorkbenchHeader/WorkbenchHeader.styles.ts","packages/components/workbench/src/WorkbenchContent/index.ts","packages/components/workbench/src/WorkbenchContent/WorkbenchContent.tsx","packages/components/workbench/src/WorkbenchContent/WorkbenchContent.styles.ts","packages/components/workbench/src/WorkbenchSidebar/index.ts","packages/components/workbench/src/WorkbenchSidebar/WorkbenchSidebar.tsx","packages/components/workbench/src/WorkbenchSidebar/WorkbenchSidebar.styles.ts"],"sourcesContent":["export { Workbench } from './CompoundWorkbench';\nexport type { WorkbenchProps } from './Workbench';\nexport { WorkbenchHeader } from './WorkbenchHeader';\nexport type { WorkbenchHeaderProps } from './WorkbenchHeader';\nexport { WorkbenchSidebar } from './WorkbenchSidebar';\nexport type { WorkbenchSidebarProps } from './WorkbenchSidebar';\nexport { WorkbenchContent } from './WorkbenchContent';\nexport type { WorkbenchContentProps } from './WorkbenchContent';\n","import { Workbench as OriginalWorkbench } from './Workbench';\nimport { WorkbenchHeader } from './WorkbenchHeader';\nimport { WorkbenchContent } from './WorkbenchContent';\nimport { WorkbenchSidebar } from './WorkbenchSidebar';\n\ntype CompoundWorkbench = typeof OriginalWorkbench & {\n  Header: typeof WorkbenchHeader;\n  Content: typeof WorkbenchContent;\n  Sidebar: typeof WorkbenchSidebar;\n};\n\nexport const Workbench = OriginalWorkbench as CompoundWorkbench;\nWorkbench.Header = WorkbenchHeader;\nWorkbench.Content = WorkbenchContent;\nWorkbench.Sidebar = WorkbenchSidebar;\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { Flex } from '@contentful/f36-core';\nimport type { CommonProps } from '@contentful/f36-core';\nimport { getWorkbenchStyles } from './Workbench.styles';\n\nexport interface WorkbenchProps extends CommonProps {\n  children: React.ReactNode;\n}\n\nfunction _Workbench(\n  { children, className, testId = 'cf-ui-workbench' }: WorkbenchProps,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const styles = getWorkbenchStyles();\n\n  const header: React.ReactNode[] = [];\n  const content: React.ReactNode[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  React.Children.forEach<any>(children, (child) => {\n    if (child) {\n      if (child.type?.displayName === 'WorkbenchHeader') {\n        header.push(child);\n      } else {\n        content.push(child);\n      }\n    }\n  });\n\n  return (\n    <div\n      data-test-id={testId}\n      ref={ref}\n      className={cx(styles.workbench, className)}\n    >\n      {header}\n      <Flex className={styles.contentWrapper}>{content}</Flex>\n    </div>\n  );\n}\n\n_Workbench.displayName = 'Workbench';\n\n/**\n * The Workbench assembles the outer app shell which defines regions to structure content and interactions\n */\nexport const Workbench = React.forwardRef(_Workbench);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getWorkbenchStyles = () => ({\n  workbench: css({\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: tokens.zIndexWorkbench,\n    overflowX: 'hidden',\n  }),\n  contentWrapper: css({\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n  }),\n});\n","export { WorkbenchHeader } from './WorkbenchHeader';\nexport type { WorkbenchHeaderProps } from './WorkbenchHeader';\n","import React, { isValidElement } from 'react';\nimport type { ReactElement, ReactNode } from 'react';\nimport { cx } from 'emotion';\nimport { Box } from '@contentful/f36-core';\nimport type { CommonProps } from '@contentful/f36-core';\nimport { Heading, Paragraph } from '@contentful/f36-typography';\nimport type { IconComponent } from '@contentful/f36-icon';\nimport { ChevronLeftIcon } from '@contentful/f36-icons';\nimport { IconButton } from '@contentful/f36-button';\n\nimport { getWorkbenchHeaderStyles } from './WorkbenchHeader.styles';\n\nexport interface WorkbenchHeaderProps extends CommonProps {\n  /** This is the title that will be shown inside the Header component */\n  title: string | ReactElement;\n  /** This is the icon that will be shown on the left side of the title and it's possible to use Forma 36’s icons or external icons */\n  icon?: IconComponent | ReactElement;\n  /** This is the text that will be shown on the right side of the title in the Header component */\n  description?: string;\n  /** It's possible to pass a ReactNode to be shown at the end of the Header */\n  actions?: ReactNode;\n  /** If a function is passed to the onBack prop the Header will show a back button that will call this function when clicked */\n  onBack?: () => void;\n}\n\nexport const WorkbenchHeader = ({\n  actions,\n  icon: Icon,\n  title,\n  description,\n  className,\n  onBack,\n  testId = 'cf-ui-workbench-header',\n}: WorkbenchHeaderProps) => {\n  const hasBackButton = Boolean(onBack);\n  const styles = getWorkbenchHeaderStyles(hasBackButton);\n  const iconComponent =\n    Icon === undefined ? null : isValidElement(Icon) ? Icon : <Icon />;\n\n  return (\n    <header\n      className={cx(styles.workbenchHeader, className)}\n      data-test-id={testId}\n    >\n      {hasBackButton && (\n        <IconButton\n          aria-label=\"Back\"\n          testId=\"workbench-back-btn\"\n          variant=\"transparent\"\n          className={styles.backButton}\n          onClick={() => onBack()}\n          icon={<ChevronLeftIcon size=\"large\" variant=\"muted\" />}\n        />\n      )}\n\n      {Icon && (\n        <Box marginRight=\"spacingM\" display=\"inline-flex\">\n          {iconComponent}\n        </Box>\n      )}\n\n      {typeof title === 'string' ? (\n        <Heading\n          className={!description && styles.flexGrow}\n          marginBottom=\"none\"\n          marginRight=\"spacingM\"\n        >\n          {title}\n        </Heading>\n      ) : (\n        title\n      )}\n\n      {description && (\n        <Paragraph\n          className={styles.description}\n          marginBottom=\"none\"\n          marginRight=\"spacingM\"\n        >\n          {description}\n        </Paragraph>\n      )}\n\n      {actions}\n    </header>\n  );\n};\n\nWorkbenchHeader.displayName = 'WorkbenchHeader';\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getWorkbenchHeaderStyles = (hasBackButton = false) => ({\n  workbenchHeader: css([\n    {\n      display: 'flex',\n      alignItems: 'center',\n      flexShrink: 0,\n      width: '100%',\n      height: '70px',\n      padding: `0 ${tokens.spacingL}`,\n      borderBottom: `1px solid ${tokens.gray300}`,\n      backgroundColor: tokens.gray100,\n      zIndex: tokens.zIndexWorkbenchHeader,\n      boxSizing: 'border-box',\n    },\n    hasBackButton && { paddingLeft: 0 },\n  ]),\n  flexGrow: css({\n    flexGrow: 1,\n  }),\n  description: css({\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    flexGrow: 1,\n  }),\n  backButton: css({\n    borderRight: `1px solid ${tokens.gray200}`,\n    marginRight: tokens.spacingM,\n    borderRadius: 0,\n    height: '100%',\n    '& svg': {\n      fill: tokens.gray400,\n    },\n    '&:focus': {\n      boxShadow: `inset ${tokens.glowPrimary}`,\n    },\n    // This overwrite is necessary because the transparent button hover and the workbench header have the same bg color\n    '&:hover': {\n      backgroundColor: tokens.gray200,\n    },\n  }),\n});\n","export { WorkbenchContent } from './WorkbenchContent';\nexport type { WorkbenchContentProps } from './WorkbenchContent';\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { CommonProps, PropsWithHTMLElement } from '@contentful/f36-core';\n\nimport { getWorkbenchContentStyles } from './WorkbenchContent.styles';\n\nexport interface WorkbenchContentOwnProps extends CommonProps {\n  children: React.ReactNode;\n  /**\n   * This props define the max-width of the content container\n   * The default value is \"default\" which translates to `max-width: 1200px` in the browser\n   * */\n  type?: 'default' | 'text' | 'full';\n}\n\nexport type WorkbenchContentProps = PropsWithHTMLElement<\n  WorkbenchContentOwnProps,\n  'main'\n>;\n\nexport const WorkbenchContent = ({\n  children,\n  className,\n  type = 'default',\n  testId = 'cf-ui-workbench-content',\n  ...otherProps\n}: WorkbenchContentProps) => {\n  const styles = getWorkbenchContentStyles(type);\n\n  return (\n    <main\n      data-test-id={testId}\n      {...otherProps}\n      className={cx(styles.workbenchContent, className)}\n    >\n      <div className={styles.innerContent}>{children}</div>\n    </main>\n  );\n};\n\nWorkbenchContent.displayName = 'WorkbenchContent';\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getWorkbenchContentStyles = (\n  type: 'default' | 'text' | 'full',\n) => {\n  let innerContentMaxWidth = 'initial';\n\n  switch (type) {\n    case 'text':\n      innerContentMaxWidth = tokens.contentWidthText;\n      break;\n    case 'full':\n      innerContentMaxWidth = tokens.contentWidthFull;\n      break;\n    default:\n      innerContentMaxWidth = tokens.contentWidthDefault;\n      break;\n  }\n\n  return {\n    workbenchContent: css({\n      padding: tokens.spacingL,\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      flexGrow: 1,\n    }),\n    innerContent: css({\n      margin: '0 auto',\n      maxWidth: innerContentMaxWidth,\n    }),\n  };\n};\n","export { WorkbenchSidebar } from './WorkbenchSidebar';\nexport type { WorkbenchSidebarProps } from './WorkbenchSidebar';\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { CommonProps, PropsWithHTMLElement } from '@contentful/f36-core';\n\nimport { getWorkbenchSidebarStyles } from './WorkbenchSidebar.styles';\n\nexport interface WorkbenchSidebarOwnProps extends CommonProps {\n  children: React.ReactNode;\n  /** It sets the correct border style for the Sidebar */\n  position?: 'left' | 'right';\n}\n\nexport type WorkbenchSidebarProps = PropsWithHTMLElement<\n  WorkbenchSidebarOwnProps,\n  'aside'\n>;\n\nexport const WorkbenchSidebar = ({\n  children,\n  className,\n  position = 'left',\n  testId = 'cf-ui-workbench-sidebar',\n  ...otherProps\n}: WorkbenchSidebarProps) => {\n  const styles = getWorkbenchSidebarStyles(position);\n\n  return (\n    <aside\n      data-test-id={testId}\n      {...otherProps}\n      className={cx(styles.workbenchSidebar, className)}\n    >\n      {children}\n    </aside>\n  );\n};\nWorkbenchSidebar.displayName = 'WorkbenchSidebar';\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getWorkbenchSidebarStyles = (position = 'left') => {\n  const borderStyleKey = position === 'left' ? 'borderRight' : 'borderLeft';\n  const width = position === 'left' ? '280px' : '360px';\n\n  return {\n    workbenchSidebar: css({\n      backgroundColor: tokens.gray100,\n      [borderStyleKey]: `1px solid ${tokens.gray200}`,\n      width,\n      padding: tokens.spacingL,\n      overflowY: 'auto',\n      overflowX: 'hidden',\n    }),\n  };\n};\n"],"names":["Workbench","WorkbenchProps","WorkbenchHeader","WorkbenchHeaderProps","WorkbenchSidebar","WorkbenchSidebarProps","WorkbenchContent","WorkbenchContentProps","OriginalWorkbench","CompoundWorkbench","Header","Content","Sidebar","React","Flex","CommonProps","getWorkbenchStyles","children","ReactNode","_Workbench","className","testId","ref","Ref","HTMLDivElement","styles","header","content","Children","forEach","child","type","displayName","push","workbench","contentWrapper","forwardRef","tokens","display","flexDirection","position","top","right","left","bottom","zIndex","zIndexWorkbench","overflowX","isValidElement","ReactElement","Box","Heading","Paragraph","IconComponent","ChevronLeftIcon","IconButton","getWorkbenchHeaderStyles","title","icon","description","actions","onBack","Icon","hasBackButton","Boolean","iconComponent","undefined","workbenchHeader","backButton","flexGrow","alignItems","flexShrink","width","height","padding","spacingL","borderBottom","gray300","backgroundColor","gray100","zIndexWorkbenchHeader","boxSizing","paddingLeft","borderRight","gray200","marginRight","spacingM","borderRadius","fill","gray400","boxShadow","glowPrimary","PropsWithHTMLElement","getWorkbenchContentStyles","WorkbenchContentOwnProps","otherProps","workbenchContent","innerContent","innerContentMaxWidth","contentWidthText","contentWidthFull","contentWidthDefault","overflowY","margin","maxWidth","getWorkbenchSidebarStyles","WorkbenchSidebarOwnProps","workbenchSidebar","borderStyleKey"],"version":3,"file":"main.js.map"}