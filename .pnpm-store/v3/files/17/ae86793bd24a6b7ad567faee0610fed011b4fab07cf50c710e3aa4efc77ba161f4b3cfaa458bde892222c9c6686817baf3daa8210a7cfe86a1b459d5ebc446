import { AuthScope, ClientId, ClientSecret, Endpoint } from './typings';
export declare type ClientCredentials = {
    clientId: ClientId;
    endpoint: Endpoint;
} & ({
    scope: AuthScope;
    clientSecret?: ClientSecret;
} | {
    clientSecret: ClientSecret;
    scope?: AuthScope;
});
export default function clientCredentials(args: ClientCredentials): Promise<(Omit<import("client-oauth2").Token, "refreshToken" | "refresh"> & {
    data: import("client-oauth2").Data & {
        owner_id?: string | undefined;
        owner_type?: string | undefined;
    };
    expires?: Date | undefined;
} & Partial<Pick<import("client-oauth2").Token, "refreshToken" | "refresh">>) | null>;
