{"mappings":"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","sources":["packages/components/table/src/index.ts","packages/components/table/src/CompoundTable.tsx","packages/components/table/src/Table.tsx","packages/components/table/src/TableBody.tsx","packages/components/table/src/TableCell.tsx","packages/components/table/src/tableCellContext.ts","packages/components/table/src/TableHead.tsx","packages/components/table/src/TableRow.tsx"],"sourcesContent":["export { Table } from './CompoundTable';\nexport type { TableProps } from './Table';\nexport { TableBody } from './TableBody';\nexport type { TableBodyProps } from './TableBody';\nexport { TableCell } from './TableCell';\nexport type { TableCellProps } from './TableCell';\nexport { contextOptions, TableCellContext } from './tableCellContext';\nexport { TableHead } from './TableHead';\nexport type { TableHeadProps } from './TableHead';\nexport { TableRow } from './TableRow';\nexport type { TableRowProps } from './TableRow';\n","import { Table as OriginalTable } from './Table';\nimport { TableBody } from './TableBody';\nimport { TableCell } from './TableCell';\nimport { TableHead } from './TableHead';\nimport { TableRow } from './TableRow';\n\ntype CompoundTable = typeof OriginalTable & {\n  Row: typeof TableRow;\n  Head: typeof TableHead;\n  Cell: typeof TableCell;\n  Body: typeof TableBody;\n};\n\nexport const Table = OriginalTable as CompoundTable;\nTable.Row = TableRow;\nTable.Head = TableHead;\nTable.Cell = TableCell;\nTable.Body = TableBody;\n","import { cx, css } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type { CommonProps } from '@contentful/f36-core';\nimport type { PropsWithHTMLElement, ExpandProps } from '@contentful/f36-core';\nimport tokens from '@contentful/f36-tokens';\n\nconst getStyles = () => {\n  return {\n    inline: css({\n      borderRadius: tokens.borderRadiusMedium,\n      boxShadow: `0 0 0 1px ${tokens.gray200}`,\n      'th:first-child': {\n        borderTopLeftRadius: tokens.borderRadiusMedium,\n      },\n      'th:last-child': {\n        borderTopRightRadius: tokens.borderRadiusMedium,\n      },\n      'tr:last-child td:first-child': {\n        borderBottomLeftRadius: tokens.borderRadiusMedium,\n      },\n      'tr:last-child td:last-child': {\n        borderBottomRightRadius: tokens.borderRadiusMedium,\n      },\n    }),\n    root: css({\n      width: '100%',\n    }),\n  };\n};\n\nexport type TableInternalProps = CommonProps & {\n  layout?: 'inline' | 'embedded';\n};\n\nexport type TableProps = PropsWithHTMLElement<TableInternalProps, 'table'>;\n\nexport const Table = forwardRef<HTMLTableElement, ExpandProps<TableProps>>(\n  (\n    {\n      children,\n      className,\n      layout = 'inline',\n      testId = 'cf-ui-table',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const styles = getStyles();\n    return (\n      <Box\n        cellPadding=\"0\"\n        cellSpacing=\"0\"\n        {...otherProps}\n        as=\"table\"\n        display=\"table\"\n        ref={forwardedRef}\n        className={cx(\n          styles.root,\n          {\n            [styles.inline]: layout === 'inline',\n          },\n          className,\n        )}\n        testId={testId}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n\nTable.displayName = 'Table';\n","import React, { forwardRef } from 'react';\nimport type { ReactElement } from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nexport type TableBodyInternalProps = CommonProps & {\n  children: ReactElement | ReactElement[];\n};\n\nexport type TableBodyProps = PropsWithHTMLElement<\n  TableBodyInternalProps,\n  'tbody'\n>;\n\nfunction _TableBody(\n  { className, children, testId = 'cf-ui-table-body', ...otherProps },\n  forwardedRef,\n) {\n  return (\n    <Box\n      {...otherProps}\n      as=\"tbody\"\n      className={className}\n      ref={forwardedRef}\n      testId={testId}\n    >\n      {children}\n    </Box>\n  );\n}\n\n_TableBody.displayName = 'TableBody';\n\nexport const TableBody = forwardRef<\n  HTMLTableSectionElement,\n  ExpandProps<TableBodyProps>\n>(_TableBody);\n","import { css, cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nimport { TableCellContext } from './tableCellContext';\n\nexport const sortingDirections = {\n  asc: 'asc',\n  desc: 'desc',\n};\n\nexport type TableCellSorting = keyof typeof sortingDirections | boolean;\n\nexport type TableCellInternalProps = CommonProps & {\n  align?: 'center' | 'left' | 'right';\n  sorting?: TableCellSorting;\n  width?: string | number;\n  children?: React.ReactNode;\n};\n\nexport type TableCellProps = PropsWithHTMLElement<\n  TableCellInternalProps,\n  'th' | 'td'\n>;\n\nexport const TableCell = forwardRef<\n  HTMLTableCellElement,\n  ExpandProps<TableCellProps>\n>(\n  (\n    {\n      align = 'left',\n      children,\n      className,\n      sorting = false as TableCellSorting,\n      testId = 'cf-ui-table-cell',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    return (\n      <TableCellContext.Consumer>\n        {({ as, name: context, offsetTop }) => {\n          const isTableHead = context === 'head';\n\n          return (\n            <Box\n              {...otherProps}\n              as={as}\n              className={cx(\n                css({\n                  backgroundColor: isTableHead ? tokens.gray100 : undefined,\n                  borderBottom: `1px solid ${tokens.gray200}`,\n                  color: sorting ? tokens.gray900 : tokens.gray700,\n                  fontFamily: tokens.fontStackPrimary,\n                  fontSize: tokens.fontSizeM,\n                  fontWeight: isTableHead\n                    ? tokens.fontWeightMedium\n                    : tokens.fontWeightNormal,\n                  lineHeight: tokens.lineHeightL,\n                  padding: `${tokens.spacingS} ${tokens.spacingM}`,\n                  textAlign: align,\n                  verticalAlign: 'top',\n                }),\n                className,\n              )}\n              ref={forwardedRef}\n              style={{\n                ...otherProps.style,\n                top: offsetTop || undefined,\n              }}\n              testId={testId}\n            >\n              {children}\n            </Box>\n          );\n        }}\n      </TableCellContext.Consumer>\n    );\n  },\n);\n\nTableCell.displayName = 'TableCell';\n","import { createContext } from 'react';\n\nexport type TableCellContextOption = {\n  name: 'body' | 'head';\n  as: 'td' | 'th';\n  offsetTop: number | string;\n};\n\nexport const contextOptions: {\n  body: TableCellContextOption;\n  head: TableCellContextOption;\n} = {\n  body: { name: 'body', as: 'td', offsetTop: 0 },\n  head: { name: 'head', as: 'th', offsetTop: 0 },\n};\n\nexport const TableCellContext = createContext(contextOptions.body);\n","import { css, cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport tokens from '@contentful/f36-tokens';\n\nimport { TableCellContext, contextOptions } from './';\n\nexport type TableHeadInternalProps = CommonProps & {\n  isSticky?: boolean;\n  offsetTop?: number | string;\n  children: React.ReactNode;\n};\n\nexport type TableHeadProps = PropsWithHTMLElement<\n  TableHeadInternalProps,\n  'thead'\n>;\n\nexport const TableHead = forwardRef<\n  HTMLTableSectionElement,\n  ExpandProps<TableHeadProps>\n>(\n  (\n    {\n      children,\n      className,\n      isSticky = false,\n      offsetTop,\n      testId = 'cf-ui-table-head',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const classNames = cx(\n      // For some reason Parcel doesn't build properly if we extract this to\n      // a variable 🤷\n      isSticky\n        ? css({\n            th: {\n              position: 'sticky',\n              top: 0,\n              zIndex: tokens.zIndexDefault,\n            },\n          })\n        : '',\n      className,\n    );\n\n    return (\n      <TableCellContext.Provider\n        value={{ ...contextOptions.head, offsetTop: offsetTop || 0 }}\n      >\n        <Box\n          {...otherProps}\n          as=\"thead\"\n          className={classNames}\n          ref={forwardedRef}\n          testId={testId}\n        >\n          {children}\n        </Box>\n      </TableCellContext.Provider>\n    );\n  },\n);\n\nTableHead.displayName = 'TableHead';\n","import { css, cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nconst getStyles = () => {\n  return {\n    root: css({\n      '&:last-child td': {\n        borderBottom: 'none',\n      },\n      '&:hover td': {\n        backgroundColor: tokens.gray100,\n      },\n    }),\n    selected: css({\n      'td, th': {\n        backgroundColor: tokens.blue100,\n      },\n      'td:last-child': {\n        boxShadow: `inset -2px 0 0 ${tokens.blue500}`,\n      },\n    }),\n  };\n};\n\nexport type TableRowInternalProps = CommonProps & {\n  isSelected?: boolean;\n  children: React.ReactNode;\n};\n\nexport type TableRowProps = PropsWithHTMLElement<TableRowInternalProps, 'tr'>;\n\nexport const TableRow = forwardRef<\n  HTMLTableRowElement,\n  ExpandProps<TableRowProps>\n>(\n  (\n    {\n      className,\n      children,\n      isSelected = false,\n      testId = 'cf-ui-table-row',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const styles = getStyles();\n    return (\n      <Box\n        {...otherProps}\n        as=\"tr\"\n        className={cx(\n          styles.root,\n          {\n            [styles.selected]: isSelected,\n          },\n          className,\n        )}\n        ref={forwardedRef}\n        testId={testId}\n      >\n        {children}\n      </Box>\n    );\n  },\n);\n\nTableRow.displayName = 'TableRow';\n"],"names":["Table","TableProps","TableBody","TableBodyProps","TableCell","TableCellProps","contextOptions","TableCellContext","TableHead","TableHeadProps","TableRow","TableRowProps","OriginalTable","CompoundTable","Row","Head","Cell","Body","React","forwardRef","Box","CommonProps","PropsWithHTMLElement","ExpandProps","tokens","getStyles","inline","borderRadius","borderRadiusMedium","boxShadow","gray200","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","root","TableInternalProps","layout","HTMLTableElement","children","className","testId","otherProps","forwardedRef","styles","displayName","ReactElement","TableBodyInternalProps","_TableBody","HTMLTableSectionElement","sortingDirections","asc","desc","TableCellSorting","TableCellInternalProps","align","sorting","width","ReactNode","HTMLTableCellElement","as","name","context","offsetTop","isTableHead","backgroundColor","gray100","undefined","borderBottom","color","gray900","gray700","fontFamily","fontStackPrimary","fontSize","fontSizeM","fontWeight","fontWeightMedium","fontWeightNormal","lineHeight","lineHeightL","padding","spacingS","spacingM","textAlign","verticalAlign","style","top","createContext","TableCellContextOption","body","head","TableHeadInternalProps","isSticky","classNames","th","position","zIndex","zIndexDefault","selected","blue100","blue500","TableRowInternalProps","isSelected","HTMLTableRowElement"],"version":3,"file":"module.js.map"}