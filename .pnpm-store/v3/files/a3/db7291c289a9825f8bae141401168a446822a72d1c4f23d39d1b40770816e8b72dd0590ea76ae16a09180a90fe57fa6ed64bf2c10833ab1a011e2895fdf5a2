{"mappings":"kIAMA,MAEMA,EAAmB,CACvBC,OAAQC,KAAKC,MAAsB,KAAhBD,KAAKE,UACxBC,QAAS,IAGJC,EAAgBC,GAAgBC,EAPjB,aAO8CR,UAEpE,MAAMS,WAAuDC,IAC3D,MAAMC,EAAiBJ,EAVH,cAWdK,EAAmBD,IAAmBX,eAC5C,OACEa,EAAAC,cAACC,EAADC,EAAA,CACEf,OAAQW,EAAmB,IAAMD,EAAeV,OAChDI,QAAS,GACLK,YAKV,SAASO,MAAMC,GACb,MAAMC,EAAUZ,EAAa,sBAS7B,OARkBa,QAAO,OAACC,iBAAD,IAACA,gBAAD,EAACA,WAAYC,WAEpBH,IAAYnB,GAC5BuB,QAAQC,KACN,kJAIGC,EAAMC,SACX,IAAMR,GAAoB,YAAWC,EAAQlB,YAAYkB,EAAQd,WAEjE,CAACa","sources":["./packages/react/id/src/id.tsx"],"sourcesContent":["// This implementation is heavily inspired by react-aria's implementation\n// See: https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/ssr/src/SSRProvider.tsx\n\nimport * as React from 'react';\nimport { createContext } from '@radix-ui/react-context';\n\nconst PROVIDER_NAME = 'IdProvider';\n\nconst defaultIdContext = {\n  prefix: Math.round(Math.random() * 10000000000),\n  current: 0,\n};\n\nconst [IdProviderImpl, useIdContext] = createContext(PROVIDER_NAME, defaultIdContext);\n\nconst IdProvider: React.FC<{ children: React.ReactNode }> = (props) => {\n  const currentContext = useIdContext(PROVIDER_NAME);\n  const isRootIdProvider = currentContext === defaultIdContext;\n  return (\n    <IdProviderImpl\n      prefix={isRootIdProvider ? 0 : ++currentContext.prefix}\n      current={0}\n      {...props}\n    />\n  );\n};\n\nfunction useId(deterministicId?: string): string {\n  const context = useIdContext('IdProviderConsumer');\n  const isBrowser = Boolean(globalThis?.document);\n\n  if (!isBrowser && context === defaultIdContext) {\n    console.warn(\n      'When server rendering, you must wrap your application in an <IdProvider> to ensure consistent ids are generated between the client and server.'\n    );\n  }\n\n  return React.useMemo(\n    () => deterministicId || `radix-id-${context.prefix}-${++context.current}`,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [deterministicId]\n  );\n}\n\nexport { IdProvider, useId };\n"],"names":["defaultIdContext","prefix","Math","round","random","current","IdProviderImpl","useIdContext","createContext","IdProvider","props","currentContext","isRootIdProvider","_react","createElement","$ae65c4aca36d67ac05042d6e17501$var$IdProviderImpl","_babelRuntimeHelpersEsmExtends","useId","deterministicId","context","Boolean","globalThis","document","console","warn","React","useMemo"],"version":3,"file":"index.module.js.map"}