{"mappings":"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","sources":["packages/components/note/src/index.ts","packages/components/note/src/Note.tsx","packages/components/note/src/Note.styles.tsx"],"sourcesContent":["export { Note } from './Note';\nexport type { NoteProps } from './Note';\n","import { cx } from 'emotion';\nimport React from 'react';\nimport { Flex, Grid } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Button } from '@contentful/f36-button';\nimport { Heading, Paragraph, Text } from '@contentful/f36-typography';\nimport {\n  CheckCircleIcon,\n  CloseIcon,\n  ErrorCircleIcon,\n  InfoCircleIcon,\n  WarningIcon,\n} from '@contentful/f36-icons';\nimport { Icon } from '@contentful/f36-icon';\n\nimport { getNoteStyles } from './Note.styles';\n\nconst icons = {\n  primary: InfoCircleIcon,\n  positive: CheckCircleIcon,\n  negative: ErrorCircleIcon,\n  warning: WarningIcon,\n  neutral: InfoCircleIcon,\n};\n\nexport type NoteVariant =\n  | 'negative'\n  | 'positive'\n  | 'primary'\n  | 'warning'\n  | 'neutral';\n\nexport type NoteInternalProps = CommonProps & {\n  /**\n   * Determines style variation of Note component\n   */\n  variant?: NoteVariant;\n  /**\n   * Sets title in the Note\n   */\n  title?: React.ReactNode;\n  /**\n   * Children of Note\n   */\n  children?: React.ReactNode | string;\n  /**\n   * Defines if the close button should be rendered\n   * @default false\n   */\n  withCloseButton?: boolean;\n  /**\n   * Callback for handling closing\n   */\n  onClose?: React.MouseEventHandler<HTMLButtonElement>;\n};\nexport type NoteProps = PropsWithHTMLElement<NoteInternalProps, 'article'>;\n\n/**\n * @description: Note provides context and information about a situation or action.\n */\nexport const Note = React.forwardRef<HTMLElement, ExpandProps<NoteProps>>(\n  (props, ref) => {\n    const {\n      children,\n      className,\n      withCloseButton = false,\n      variant = 'primary',\n      onClose,\n      testId = 'cf-ui-note',\n      title,\n      ...otherProps\n    } = props;\n\n    const styles = getNoteStyles();\n\n    return (\n      <Grid\n        {...otherProps}\n        columns={withCloseButton ? 'auto 1fr 24px' : 'auto 1fr'} // 24px is the width of the close button\n        as=\"article\"\n        className={cx(styles.container({ variant }), className)}\n        testId={testId}\n        ref={ref}\n        padding=\"spacingM\"\n      >\n        <Icon\n          as={icons[variant]}\n          variant={variant === 'neutral' ? 'muted' : variant}\n          size={title ? 'medium' : 'small'}\n        />\n        <Flex flexDirection=\"column\">\n          {title && (\n            <Heading\n              as=\"h2\"\n              className={styles.title}\n              marginBottom={!children ? 'none' : 'spacingS'}\n            >\n              {title}\n            </Heading>\n          )}\n          {children && (\n            <Text\n              as=\"div\"\n              lineHeight=\"lineHeightM\"\n              className={styles.description}\n            >\n              {typeof children === 'string' ? (\n                <Paragraph marginBottom=\"none\">{children}</Paragraph>\n              ) : (\n                children\n              )}\n            </Text>\n          )}\n        </Flex>\n        {withCloseButton && (\n          <Button\n            variant=\"transparent\"\n            startIcon={<CloseIcon className={styles.closeIcon} />}\n            onClick={onClose}\n            testId={`${testId}-close`}\n            aria-label=\"Dismiss\"\n            className={styles.close}\n          />\n        )}\n      </Grid>\n    );\n  },\n);\n\nNote.displayName = 'Note';\n","import { css } from 'emotion';\nimport type { CSSObject } from '@emotion/serialize';\nimport tokens from '@contentful/f36-tokens';\n\nimport type { NoteProps, NoteVariant } from './Note';\n\nconst variantToStyles = (variant: NoteVariant): CSSObject => {\n  switch (variant) {\n    case 'primary':\n      return {\n        backgroundColor: tokens.blue100,\n        borderColor: tokens.blue300,\n\n        a: {\n          color: tokens.blue700,\n        },\n      };\n    case 'positive':\n      return {\n        backgroundColor: tokens.green100,\n        borderColor: tokens.green300,\n\n        a: {\n          color: tokens.blue700,\n        },\n      };\n    case 'negative':\n      return {\n        backgroundColor: tokens.red100,\n        borderColor: tokens.red300,\n\n        a: {\n          color: tokens.blue700,\n        },\n      };\n    case 'warning':\n      return {\n        backgroundColor: tokens.orange100,\n        borderColor: tokens.orange300,\n\n        a: {\n          color: tokens.blue700,\n        },\n      };\n    case 'neutral':\n      return {\n        backgroundColor: tokens.gray100,\n        borderColor: tokens.gray300,\n\n        a: {\n          color: tokens.blue700,\n        },\n      };\n    default:\n      return {};\n  }\n};\n\nexport const getNoteStyles = () => {\n  return {\n    container: ({ variant }: Pick<NoteProps, 'variant'>) =>\n      css({\n        position: 'relative',\n        borderRadius: tokens.borderRadiusMedium,\n        border: '1px solid',\n        ...variantToStyles(variant),\n      }),\n    title: css({\n      color: tokens.gray800,\n      fontSize: tokens.fontSizeL,\n      lineHeight: tokens.lineHeightL,\n    }),\n    description: css({\n      color: tokens.gray700,\n    }),\n    close: css({\n      position: 'absolute',\n      top: tokens.spacingXs,\n      right: tokens.spacingXs,\n      padding: tokens.spacingXs,\n      '&:hover, &:active': {\n        backgroundColor: 'transparent',\n      },\n    }),\n    closeIcon: css({\n      fill: tokens.gray600,\n    }),\n  };\n};\n"],"names":["Note","NoteProps","React","Flex","Grid","CommonProps","PropsWithHTMLElement","ExpandProps","Button","Heading","Paragraph","Text","CheckCircleIcon","CloseIcon","ErrorCircleIcon","InfoCircleIcon","WarningIcon","Icon","getNoteStyles","icons","primary","positive","negative","warning","neutral","NoteVariant","NoteInternalProps","variant","title","ReactNode","children","withCloseButton","onClose","MouseEventHandler","HTMLButtonElement","forwardRef","HTMLElement","props","ref","className","testId","otherProps","styles","container","description","closeIcon","close","displayName","CSSObject","tokens","variantToStyles","backgroundColor","blue100","borderColor","blue300","a","color","blue700","green100","green300","red100","red300","orange100","orange300","gray100","gray300","Pick","position","borderRadius","borderRadiusMedium","border","gray800","fontSize","fontSizeL","lineHeight","lineHeightL","gray700","top","spacingXs","right","padding","fill","gray600"],"version":3,"file":"module.js.map"}