{"mappings":"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","sources":["packages/components/entity-list/src/index.ts","packages/components/entity-list/src/CompoundEntityList.tsx","packages/components/entity-list/src/EntityList.tsx","packages/components/entity-list/src/EntityList.styles.ts","packages/components/entity-list/src/EntityListItem/EntityListItem.tsx","packages/components/entity-list/src/EntityListItem/EntityListItem.styles.ts"],"sourcesContent":["export { EntityList } from './CompoundEntityList';\nexport type { EntityListProps } from './EntityList';\nexport { EntityListItem } from './EntityListItem/EntityListItem';\nexport type { EntityListItemProps } from './EntityListItem/EntityListItem';\n","import { EntityList as OriginalEntityList } from './EntityList';\nimport { EntityListItem } from './EntityListItem/EntityListItem';\n\ntype CompoundEntityList = typeof OriginalEntityList & {\n  Item: typeof EntityListItem;\n};\n\nexport const EntityList = OriginalEntityList as CompoundEntityList;\nEntityList.Item = EntityListItem;\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\n\nimport { getEntityListStyles } from './EntityList.styles';\n\nexport interface EntityListProps extends CommonProps {\n  children?: React.ReactNode;\n}\n\nfunction _EntityList(\n  props: ExpandProps<EntityListProps>,\n  ref: React.Ref<HTMLUListElement>,\n) {\n  const styles = getEntityListStyles();\n\n  return (\n    <ul\n      data-test-id={props.testId || 'cf-ui-entity-list'}\n      ref={ref}\n      className={cx(styles.root, props.className)}\n      style={props.style}\n    >\n      {props.children}\n    </ul>\n  );\n}\n\n_EntityList.displayName = 'EntityList';\n\nexport const EntityList = React.forwardRef(_EntityList);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getEntityListStyles = () => ({\n  root: css({\n    display: 'block',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    border: `1px solid ${tokens.gray200}`,\n    borderBottom: 'none',\n    borderRadius: tokens.borderRadiusMedium,\n    overflow: 'hidden',\n  }),\n});\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type { MouseEventHandler } from 'react';\n\nimport { EntityStatusBadge } from '@contentful/f36-badge';\nimport type {\n  CommonProps,\n  EntityStatus,\n  PickUnion,\n} from '@contentful/f36-core';\nimport {\n  AssetIcon,\n  EntryIcon,\n  ReleaseIcon,\n  MoreHorizontalIcon,\n} from '@contentful/f36-icons';\nimport { Icon } from '@contentful/f36-icon';\nimport { Text } from '@contentful/f36-typography';\nimport { DragHandle } from '@contentful/f36-drag-handle';\nimport type { DragHandleProps } from '@contentful/f36-drag-handle';\nimport { Button } from '@contentful/f36-button';\nimport { Menu } from '@contentful/f36-menu';\n\nimport { getEntityListItemStyles } from './EntityListItem.styles';\n\nimport {\n  SkeletonBodyText,\n  SkeletonContainer,\n  SkeletonImage,\n} from '@contentful/f36-skeleton';\nimport { Flex, Box } from '@contentful/f36-core';\n\ntype EntityListItemStatus = PickUnion<\n  EntityStatus,\n  'archived' | 'changed' | 'draft' | 'published'\n>;\n\nconst ICON_MAP = {\n  asset: AssetIcon,\n  entry: EntryIcon,\n  release: ReleaseIcon,\n};\n\nexport interface EntityListItemProps extends CommonProps {\n  /**\n   * The title of the entity\n   */\n  title: string;\n  /**\n   * The description of the entity\n   */\n  description?: string;\n  /**\n   * The content type of the entity\n   */\n  contentType?: string;\n  /**\n   * The publish status of the entry\n   */\n  status?: EntityListItemStatus;\n  /**\n   * A boolean used to render the Thumbnail or not\n   */\n  withThumbnail?: boolean;\n  /**\n   * The URL of the entity's preview thumbnail. Use 46px x 46px images for best results\n   */\n  thumbnailUrl?: string;\n  /**\n   * The alt text for the thumbnail\n   */\n  thumbnailAltText?: string;\n  /**\n   * Menu elements rendered as actions in Menu\n   */\n  actions?: React.ReactNodeArray;\n  /**\n   * Renders a drag handle for the component for use in drag and drop contexts\n   */\n  withDragHandle?: boolean;\n  /**\n   * Applies styling for when the component is actively being dragged by the user\n   */\n  isDragActive?: boolean;\n  /**\n   * Prop to pass a custom CardDragHandle component to for use in drag and drop contexts\n   */\n  cardDragHandleComponent?: React.ReactNode;\n  /**\n   * Props to pass down to the default CardDragHandle component (does not work with cardDragHandleComponent prop)\n   */\n  cardDragHandleProps?: Partial<DragHandleProps>;\n  /**\n   * An entity can either be an Entry, an Asset or a Release. This prop will apply styling based on if the entity is an asset, a release or an entry\n   *\n   * Note: 'entry' and 'asset' are @deprecated but supported in v1.x for backwards compatibility\n   */\n  entityType?: 'Entry' | 'Asset' | 'entry' | 'asset' | 'Release';\n  /**\n   * Loading state for the component - when true will display loading feedback to the user\n   */\n  isLoading?: boolean;\n  /**\n   * The action to be performed on click of the EntryCard\n   */\n  onClick?: MouseEventHandler;\n  /**\n   * The href for the component. Will render the card as an `a` element for native browser link handling\n   */\n  href?: string;\n  /**\n   * A boolean used to disable the CardActions\n   */\n  isActionsDisabled?: boolean;\n}\n\nexport const EntityListItem = ({\n  className,\n  testId = 'cf-ui-entity-list-item',\n  title,\n  description,\n  contentType,\n  entityType = 'entry',\n  withThumbnail = true,\n  thumbnailUrl,\n  thumbnailAltText,\n  status,\n  actions,\n  withDragHandle,\n  isDragActive,\n  isLoading,\n  onClick,\n  href,\n  cardDragHandleProps,\n  cardDragHandleComponent,\n  isActionsDisabled = false,\n  ...otherProps\n}: EntityListItemProps): React.ReactElement => {\n  const styles = getEntityListItemStyles();\n\n  const renderCardDragHandle = () => {\n    if (cardDragHandleComponent) {\n      return cardDragHandleComponent;\n    } else if (withDragHandle) {\n      return (\n        <DragHandle\n          className={styles.dragHandle}\n          isActive={isDragActive}\n          label=\"Reorder entry\"\n          {...cardDragHandleProps}\n        />\n      );\n    }\n  };\n\n  let Element: React.ElementType = 'article';\n  if (href || onClick) {\n    Element = href ? 'a' : 'button';\n  }\n\n  // archived assets will not be available on the CDN, resulting in a broken image src\n  const isArchived = status === 'archived';\n  const asIcon = isArchived || !thumbnailUrl;\n\n  return (\n    <li\n      {...otherProps}\n      className={cx(styles.root({ isDragActive }), className)}\n      data-test-id={testId}\n    >\n      {renderCardDragHandle()}\n      {isLoading ? (\n        <article className={styles.card}>\n          <SkeletonContainer clipId=\"f36-entity-list-item-skeleton\">\n            <SkeletonImage height={46} width={46} />\n            <SkeletonBodyText\n              numberOfLines={2}\n              lineHeight={18}\n              offsetLeft={54}\n            />\n          </SkeletonContainer>\n        </article>\n      ) : (\n        <Element\n          className={styles.card}\n          onClick={onClick}\n          href={href}\n          type={Element === 'button' ? 'button' : undefined}\n          target={href ? '_blank' : undefined}\n        >\n          {withThumbnail && (\n            <figure className={styles.media}>\n              {asIcon ? (\n                <Icon as={ICON_MAP[entityType.toLowerCase()]} variant=\"muted\" />\n              ) : (\n                <img\n                  src={thumbnailUrl}\n                  className={styles.thumbnail}\n                  alt={thumbnailAltText}\n                />\n              )}\n            </figure>\n          )}\n\n          <div className={styles.content}>\n            <Flex>\n              <Text\n                as=\"h3\"\n                lineHeight=\"lineHeightM\"\n                fontColor=\"gray900\"\n                fontWeight=\"fontWeightDemiBold\"\n                isTruncated\n              >\n                {title}\n              </Text>\n\n              {contentType && (\n                <Text\n                  as=\"span\"\n                  lineHeight=\"lineHeightM\"\n                  fontColor=\"gray600\"\n                  className={styles.contentType}\n                  isTruncated\n                >\n                  ({contentType})\n                </Text>\n              )}\n            </Flex>\n            {description && (\n              <Text\n                as=\"p\"\n                lineHeight=\"lineHeightM\"\n                fontColor=\"gray900\"\n                isTruncated\n                className={styles.description}\n              >\n                {description}\n              </Text>\n            )}\n          </div>\n\n          <Flex\n            className={styles.meta}\n            alignItems=\"flex-start\"\n            paddingLeft=\"spacingXs\"\n          >\n            {status && (\n              <Box marginRight={actions ? 'spacingXs' : 'none'}>\n                <EntityStatusBadge entityStatus={status} />\n              </Box>\n            )}\n\n            {actions && (\n              <Menu>\n                <Menu.Trigger>\n                  <Button\n                    isDisabled={isActionsDisabled}\n                    startIcon={<MoreHorizontalIcon />}\n                    variant=\"transparent\"\n                    aria-label=\"Actions\"\n                    size=\"small\"\n                    className={styles.menuTrigger}\n                  />\n                </Menu.Trigger>\n                <Menu.List>{actions}</Menu.List>\n              </Menu>\n            )}\n          </Flex>\n        </Element>\n      )}\n    </li>\n  );\n};\n\nEntityListItem.displayName = 'EntityListItem';\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { EntityListItemProps } from './EntityListItem';\n\nexport const getEntityListItemStyles = () => ({\n  root: (props: Pick<EntityListItemProps, 'isDragActive'>) =>\n    css({\n      display: 'flex',\n      boxShadow: `inset 0 -1px 0 ${tokens.gray200}`,\n      position: 'relative',\n      transition: `${tokens.transitionDurationShort} ${tokens.transitionEasingDefault}`,\n      transitionProperty: 'box-shadow, background-color',\n      backgroundColor: tokens.colorWhite,\n      ...(props.isDragActive\n        ? {\n            boxShadow: tokens.boxShadowHeavy,\n          }\n        : {}),\n\n      '&:hover': {\n        backgroundColor: tokens.gray100,\n      },\n    }),\n  card: css({\n    display: 'flex',\n    textDecoration: 'none',\n    width: '100%',\n    minHeight: tokens.spacing3Xl,\n    padding: tokens.spacingXs,\n    border: 'none',\n    background: 'none',\n    textAlign: 'left',\n  }),\n  content: css({\n    flexGrow: 1,\n    minWidth: 0,\n  }),\n  media: css({\n    display: 'flex',\n    flexShrink: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: tokens.gray200,\n    width: tokens.spacing2Xl,\n    height: tokens.spacing2Xl,\n    margin: '0',\n    marginRight: tokens.spacingXs,\n  }),\n  thumbnail: css({\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  }),\n  contentType: css({\n    marginLeft: tokens.spacingXs,\n  }),\n  description: css({\n    marginTop: tokens.spacing2Xs,\n  }),\n  meta: css({\n    marginLeft: 'auto',\n    flexShrink: 0,\n  }),\n  dragHandle: css({\n    borderBottomLeftRadius: '0',\n    borderTopLeftRadius: '0',\n    boxShadow: `inset 0 -1px 0 ${tokens.gray200}`,\n  }),\n  menuTrigger: css({\n    padding: '0 0.125rem',\n    minHeight: '1.5rem',\n  }),\n});\n"],"names":["EntityList","EntityListProps","EntityListItem","EntityListItemProps","OriginalEntityList","CompoundEntityList","Item","React","CommonProps","ExpandProps","getEntityListStyles","children","ReactNode","_EntityList","props","ref","Ref","HTMLUListElement","styles","testId","root","className","style","displayName","forwardRef","tokens","display","listStyle","margin","padding","border","gray200","borderBottom","borderRadius","borderRadiusMedium","overflow","MouseEventHandler","EntityStatusBadge","EntityStatus","PickUnion","AssetIcon","EntryIcon","ReleaseIcon","MoreHorizontalIcon","Icon","Text","DragHandle","DragHandleProps","Button","Menu","getEntityListItemStyles","SkeletonBodyText","SkeletonContainer","SkeletonImage","Flex","Box","EntityListItemStatus","ICON_MAP","asset","entry","release","title","description","contentType","status","withThumbnail","thumbnailUrl","thumbnailAltText","actions","ReactNodeArray","withDragHandle","isDragActive","cardDragHandleComponent","cardDragHandleProps","Partial","entityType","isLoading","onClick","href","isActionsDisabled","otherProps","ReactElement","renderCardDragHandle","dragHandle","Element","ElementType","isArchived","asIcon","card","undefined","media","toLowerCase","thumbnail","content","meta","menuTrigger","Pick","boxShadow","position","transition","transitionDurationShort","transitionEasingDefault","transitionProperty","backgroundColor","colorWhite","boxShadowHeavy","gray100","textDecoration","width","minHeight","spacing3Xl","spacingXs","background","textAlign","flexShrink","alignItems","justifyContent","spacing2Xl","height","marginRight","marginLeft","marginTop","spacing2Xs","borderBottomLeftRadius","borderTopLeftRadius"],"version":3,"file":"main.js.map"}