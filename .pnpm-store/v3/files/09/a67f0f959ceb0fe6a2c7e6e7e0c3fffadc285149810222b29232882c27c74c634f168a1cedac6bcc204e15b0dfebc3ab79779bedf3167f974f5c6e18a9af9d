{"mappings":"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","sources":["packages/components/popover/src/index.ts","packages/components/popover/src/CompoundPopover.tsx","packages/components/popover/src/Popover.tsx","packages/components/popover/src/PopoverContext.ts","packages/components/popover/src/PopoverContent/PopoverContent.tsx","packages/components/popover/src/PopoverContent/PopoverContent.styles.ts","packages/components/popover/src/PopoverTrigger/PopoverTrigger.tsx"],"sourcesContent":["export { Popover } from './CompoundPopover';\nexport type { PopoverProps } from './Popover';\nexport { PopoverTrigger } from './PopoverTrigger/PopoverTrigger';\nexport type { PopoverTriggerProps } from './PopoverTrigger/PopoverTrigger';\nexport { PopoverContent } from './PopoverContent/PopoverContent';\nexport type { PopoverContentProps } from './PopoverContent/PopoverContent';\n","import { Popover as OriginalPopover } from './Popover';\nimport { PopoverContent } from './PopoverContent/PopoverContent';\nimport { PopoverTrigger } from './PopoverTrigger/PopoverTrigger';\n\ntype CompoundPopover = typeof OriginalPopover & {\n  Content: typeof PopoverContent;\n  Trigger: typeof PopoverTrigger;\n};\n\nexport const Popover = OriginalPopover as CompoundPopover;\nPopover.Content = PopoverContent;\nPopover.Trigger = PopoverTrigger;\n","import React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useId, mergeRefs } from '@contentful/f36-core';\nimport type { ExpandProps } from '@contentful/f36-core';\nimport type { Placement, Modifier } from '@popperjs/core';\nimport { PopoverContextProvider, PopoverContextType } from './PopoverContext';\nimport { usePopper } from 'react-popper';\n\nexport interface PopoverProps {\n  children: React.ReactNode;\n\n  /**\n   * Boolean to determine if the Popover should be the same width as\n   * the trigger element\n   *\n   * @default false\n   */\n  isFullWidth?: boolean;\n\n  /**\n   * Boolean to control whether or not the Popover is open\n   *\n   * @default false\n   */\n  isOpen?: boolean;\n\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void;\n\n  /**\n   * Determines the preferred position of the Popover. This position is not\n   * guaranteed, as the Popover might be moved to fit the viewport\n   *\n   * @default bottom-start\n   */\n  placement?: Placement;\n\n  /**\n   * Boolean to control if popover is allowed to change its placement automatically\n   * based on available space in the viewport.\n   *\n   * For example:\n   * If you set placement prop to bottom, but there isn't enough space to position the popover in that direction,\n   * it will change the popper placement to top. As soon as enough space is detected, the placement will be reverted to the defined one.\n   *\n   * If you want the popover to strictly follow the placement prop you should set this prop to false.\n   *\n   * @default true\n   */\n  isAutoalignmentEnabled?: boolean;\n\n  /**\n   * Boolean to control whether or not to render the Popover in a React Portal.\n   * Rendering content inside a Portal allows the Popover to escape the bounds\n   * of its parent while still being positioned correctly. Using a Portal is\n   * necessary if an ancestor of the Popover hides overflow.\n   *\n   * @default true\n   */\n  usePortal?: boolean;\n\n  /**\n   * If true, the popover will close when you blur out it by clicking outside or tabbing out\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean;\n\n  /**\n   * If true, the popover will close when you hit the Esc key\n   *\n   * @default true\n   */\n  closeOnEsc?: boolean;\n\n  /**\n   * If true, the popover will be focused after opening\n   *\n   * @default true\n   */\n  autoFocus?: boolean;\n\n  /**\n   * Popover id. Will be used as an `id` attribute on popover\n   * and as `aria-controls` attribute on trigger\n   *\n   * @default true\n   */\n  id?: string;\n\n  /**\n   * The `X-axis` and `Y-axis` offset to position popper element\n   * from its trigger element. `[X, Y]`\n   *\n   * @default [1, 4]\n   */\n  offset?: [number, number];\n\n  /**\n   * Defines if popover should be rendered in the DOM only when it's open\n   * or all the time (after the component has been mounted)\n   *\n   * @default true\n   */\n  renderOnlyWhenOpen?: boolean;\n}\n\nexport function Popover(props: ExpandProps<PopoverProps>) {\n  const {\n    children,\n    isOpen,\n    placement = 'bottom-start',\n    isFullWidth = false,\n    isAutoalignmentEnabled = true,\n    usePortal = true,\n    closeOnBlur = true,\n    closeOnEsc = true,\n    onClose,\n    autoFocus = true,\n    id,\n    offset = [1, 4],\n    renderOnlyWhenOpen = true,\n  } = props;\n\n  const [triggerElement, setTriggerElement] = useState<HTMLElement | null>(\n    null,\n  );\n  const [popoverElement, setPopoverElement] = useState<HTMLElement | null>(\n    null,\n  );\n\n  const {\n    attributes: popperAttributes,\n    update,\n    styles: popperStyles,\n  } = usePopper(triggerElement, popoverElement, {\n    placement,\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        ...sameWidth,\n        enabled: isFullWidth,\n      },\n      {\n        name: 'preventOverflow',\n        enabled: isAutoalignmentEnabled,\n        options: {\n          mainAxis: true,\n        },\n      },\n      {\n        name: 'flip',\n        enabled: isAutoalignmentEnabled,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    if (isOpen && autoFocus && popoverElement) {\n      popoverElement.focus({ preventScroll: true });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, popoverElement]);\n\n  useEffect(() => {\n    const updatePosition = async () => {\n      if (isOpen && update) {\n        await update();\n      }\n    };\n    updatePosition();\n  }, [isOpen, update]);\n\n  const popoverGeneratedId = useId(undefined, 'popover-content');\n  const popoverId = id || popoverGeneratedId;\n\n  const closeAndFocusTrigger = useCallback(() => {\n    onClose?.();\n\n    // setTimeout trick to make it work with focus-lock\n    setTimeout(() => triggerElement?.focus({ preventScroll: true }), 0);\n  }, [onClose, triggerElement]);\n\n  const contextValue: PopoverContextType = useMemo(\n    () => ({\n      isOpen: Boolean(isOpen),\n      usePortal,\n      renderOnlyWhenOpen,\n      getTriggerProps: (_ref = null) => ({\n        ref: mergeRefs(setTriggerElement, _ref),\n        ['aria-expanded']: Boolean(isOpen),\n        ['aria-controls']: popoverId,\n      }),\n      getPopoverProps: (_props = {}, _ref = null) => ({\n        ...popperAttributes.popper,\n        style: {\n          ...(_props.style || {}),\n          ...popperStyles.popper,\n        },\n        ref: mergeRefs(setPopoverElement, _ref),\n        id: popoverId,\n        onBlur: (event: React.FocusEvent<HTMLDivElement>) => {\n          if (_props.onBlur) {\n            _props.onBlur(event);\n          }\n\n          if (!closeOnBlur) {\n            return;\n          }\n\n          const relatedTarget = event.relatedTarget as Node;\n\n          const targetIsPopover =\n            popoverElement === relatedTarget ||\n            popoverElement?.contains(relatedTarget);\n          const targetIsTrigger =\n            triggerElement === relatedTarget ||\n            triggerElement?.contains(relatedTarget);\n\n          if (targetIsPopover || targetIsTrigger) {\n            return;\n          }\n\n          onClose?.();\n        },\n        onKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => {\n          if (_props.onKeyDown) {\n            _props.onKeyDown(event);\n          }\n\n          if (closeOnEsc && event.key === 'Escape') {\n            closeAndFocusTrigger();\n          }\n        },\n      }),\n    }),\n    [\n      isOpen,\n      renderOnlyWhenOpen,\n      popperAttributes,\n      popperStyles,\n      usePortal,\n      popoverId,\n      closeOnEsc,\n      closeOnBlur,\n      popoverElement,\n      triggerElement,\n      closeAndFocusTrigger,\n      onClose,\n    ],\n  );\n\n  return (\n    <PopoverContextProvider value={contextValue}>\n      {children}\n    </PopoverContextProvider>\n  );\n}\n\n/**\n * Sets the popover width to the size of the trigger element.\n */\nconst sameWidth: Modifier<'sameWidth', any> = {\n  name: 'sameWidth',\n  enabled: true,\n  phase: 'beforeWrite',\n  requires: ['computeStyles'],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: ({ state }) => () => {\n    const reference = state.elements.reference as HTMLElement;\n    state.elements.popper.style.width = `${reference.offsetWidth}px`;\n  },\n};\n","import React, { HTMLProps } from 'react';\n\nexport type PopoverContextType = {\n  isOpen: boolean;\n  usePortal: boolean;\n  renderOnlyWhenOpen: boolean;\n  getPopoverProps: (\n    _props: HTMLProps<HTMLDivElement>,\n    _ref: React.Ref<HTMLDivElement>,\n  ) => HTMLProps<HTMLDivElement>;\n  getTriggerProps: (_ref: React.Ref<HTMLElement>) => HTMLProps<HTMLElement>;\n};\n\nconst PopoverContext = React.createContext<PopoverContextType | undefined>(\n  undefined,\n);\n\nexport const usePopoverContext = () => {\n  const context = React.useContext(PopoverContext);\n\n  if (context === undefined) {\n    throw new Error(\n      'usePopoverContext must be used within a PopoverContextProvider',\n    );\n  }\n\n  return context;\n};\n\nexport const PopoverContextProvider = PopoverContext.Provider;\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { usePopoverContext } from '../PopoverContext';\nimport { Portal } from '@contentful/f36-utils';\nimport { getPopoverContentStyles } from './PopoverContent.styles';\n\ninterface PopoverContentInternalProps extends CommonProps {\n  children?: React.ReactNode;\n}\n\nexport type PopoverContentProps = PropsWithHTMLElement<\n  PopoverContentInternalProps,\n  'div'\n>;\n\nconst _PopoverContent = (props: ExpandProps<PopoverContentProps>, ref) => {\n  const {\n    children,\n    className,\n    testId = 'cf-ui-popover-content',\n    role = 'dialog',\n    ...otherProps\n  } = props;\n  const {\n    isOpen,\n    renderOnlyWhenOpen,\n    getPopoverProps,\n    usePortal,\n  } = usePopoverContext();\n\n  const styles = getPopoverContentStyles(isOpen);\n\n  const content = (\n    <div\n      {...otherProps}\n      {...getPopoverProps(otherProps, ref)}\n      className={cx(styles.container, className)}\n      data-test-id={testId}\n      tabIndex={-1}\n      role={role}\n      // specific attribute to mark that this element is absolute positioned\n      // for internal contentful apps usage\n      data-position-absolute\n    >\n      {children}\n    </div>\n  );\n\n  if (renderOnlyWhenOpen && !isOpen) {\n    return null;\n  }\n\n  return usePortal ? <Portal>{content}</Portal> : content;\n};\n\nexport const PopoverContent = React.forwardRef(_PopoverContent);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getPopoverContentStyles = (isOpen: boolean) => ({\n  container: css({\n    display: isOpen ? 'initial' : 'none',\n    background: tokens.colorWhite,\n    border: 0,\n    borderRadius: tokens.borderRadiusMedium,\n    boxShadow: tokens.boxShadowDefault,\n    zIndex: tokens.zIndexDropdown,\n    '&:focus': {\n      boxShadow: tokens.glowPrimary,\n      outline: 'none',\n    },\n    '&:focus:not(:focus-visible)': {\n      boxShadow: tokens.boxShadowDefault,\n    },\n  }),\n});\n","import React from 'react';\nimport { usePopoverContext } from '../PopoverContext';\n\nexport interface PopoverTriggerProps {\n  children: React.ReactNode;\n}\n\n/**\n * PopoverTrigger opens the popover. It must be an interactive element.\n */\nexport const PopoverTrigger = (props: PopoverTriggerProps) => {\n  const child = React.Children.only(props.children) as any;\n  const { getTriggerProps } = usePopoverContext();\n\n  return React.cloneElement(child, {\n    ...getTriggerProps(child.ref),\n    'aria-haspopup': child.props['aria-haspopup'] ?? 'dialog',\n  });\n};\n"],"names":["Popover","PopoverProps","PopoverTrigger","PopoverTriggerProps","PopoverContent","PopoverContentProps","OriginalPopover","CompoundPopover","Content","Trigger","React","useMemo","useState","useEffect","useCallback","useId","mergeRefs","ExpandProps","Placement","Modifier","PopoverContextProvider","PopoverContextType","usePopper","children","ReactNode","isFullWidth","isOpen","onClose","placement","isAutoalignmentEnabled","usePortal","closeOnBlur","closeOnEsc","autoFocus","id","offset","renderOnlyWhenOpen","props","triggerElement","setTriggerElement","HTMLElement","popoverElement","setPopoverElement","attributes","popperAttributes","update","styles","popperStyles","modifiers","name","options","sameWidth","enabled","mainAxis","focus","preventScroll","updatePosition","popoverGeneratedId","undefined","popoverId","closeAndFocusTrigger","setTimeout","contextValue","Boolean","getTriggerProps","_ref","ref","getPopoverProps","_props","popper","style","onBlur","event","FocusEvent","HTMLDivElement","relatedTarget","Node","targetIsPopover","contains","targetIsTrigger","onKeyDown","KeyboardEvent","key","phase","requires","fn","state","width","rects","reference","effect","elements","offsetWidth","HTMLProps","Ref","PopoverContext","createContext","usePopoverContext","context","useContext","Error","Provider","CommonProps","PropsWithHTMLElement","Portal","getPopoverContentStyles","PopoverContentInternalProps","_PopoverContent","className","testId","role","otherProps","content","container","forwardRef","tokens","display","background","colorWhite","border","borderRadius","borderRadiusMedium","boxShadow","boxShadowDefault","zIndex","zIndexDropdown","glowPrimary","outline","child","Children","only","cloneElement"],"version":3,"file":"main.js.map"}