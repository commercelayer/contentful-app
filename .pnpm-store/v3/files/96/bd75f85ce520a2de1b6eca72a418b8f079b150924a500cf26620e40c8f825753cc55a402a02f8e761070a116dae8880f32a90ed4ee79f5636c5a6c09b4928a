{"mappings":"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","sources":["packages/components/forms/src/index.ts","packages/components/forms/src/HelpText/index.ts","packages/components/forms/src/HelpText/HelpText.tsx","packages/components/forms/src/FormControl/FormControlContext.tsx","packages/components/forms/src/ValidationMessage/index.ts","packages/components/forms/src/ValidationMessage/ValidationMessage.tsx","packages/components/forms/src/Checkbox/CompoundCheckbox.tsx","packages/components/forms/src/Checkbox/Checkbox.tsx","packages/components/forms/src/BaseCheckbox/index.ts","packages/components/forms/src/BaseCheckbox/BaseCheckbox.tsx","packages/components/forms/src/BaseCheckbox/GhostCheckbox.tsx","packages/components/forms/src/BaseCheckbox/GhostCheckbox.styles.ts","packages/components/forms/src/BaseCheckbox/BaseCheckbox.styles.ts","packages/components/forms/src/BaseCheckbox/BaseCheckboxGroupContext.tsx","packages/components/forms/src/Checkbox/CheckboxGroup.tsx","packages/components/forms/src/BaseCheckbox/BaseCheckboxGroup.tsx","packages/components/forms/src/FormControl/CompoundFormControl.tsx","packages/components/forms/src/FormControl/FormControl.tsx","packages/components/forms/src/FormLabel/index.ts","packages/components/forms/src/FormLabel/FormLabel.tsx","packages/components/forms/src/FormLabel/FormLabel.styles.ts","packages/components/forms/src/Counter/index.ts","packages/components/forms/src/Counter/Counter.tsx","packages/components/forms/src/Counter/Counter.styles.ts","packages/components/forms/src/Radio/CompoundRadio.tsx","packages/components/forms/src/Radio/Radio.tsx","packages/components/forms/src/Radio/RadioGroup.tsx","packages/components/forms/src/TextInput/CompoundTextInput.tsx","packages/components/forms/src/TextInput/TextInput.tsx","packages/components/forms/src/BaseInput/index.ts","packages/components/forms/src/BaseInput/BaseInput.tsx","packages/components/forms/src/BaseInput/BaseInput.styles.ts","packages/components/forms/src/TextInput/input-group/InputGroup.tsx","packages/components/forms/src/TextInput/input-group/InputGroup.styles.ts","packages/components/forms/src/Switch/index.ts","packages/components/forms/src/Switch/Switch.tsx","packages/components/forms/src/Textarea/index.ts","packages/components/forms/src/Textarea/Textarea.tsx","packages/components/forms/src/Textarea/Textarea.styles.ts","packages/components/forms/src/Select/SelectOption.tsx","packages/components/forms/src/Select/CompoundSelect.tsx","packages/components/forms/src/Select/Select.tsx","packages/components/forms/src/Select/Select.styles.ts","packages/components/forms/src/Form/index.ts","packages/components/forms/src/Form/Form.tsx"],"sourcesContent":["export { HelpText } from './HelpText';\nexport type { HelpTextProps } from './HelpText';\nexport { ValidationMessage } from './ValidationMessage';\nexport type { ValidationMessageProps } from './ValidationMessage';\nexport { Checkbox } from './Checkbox/CompoundCheckbox';\nexport type { CheckboxProps } from './Checkbox';\nexport type { CheckboxGroupProps } from './Checkbox/CheckboxGroup';\nexport { FormControl } from './FormControl/CompoundFormControl';\nexport type { FormControlProps, FormControlInternalProps } from './FormControl';\nexport { FormLabel } from './FormLabel';\nexport type { FormLabelInternalProps, FormLabelProps } from './FormLabel';\nexport { Radio } from './Radio/CompoundRadio';\nexport type { RadioProps } from './Radio';\nexport type { RadioGroupProps } from './Radio/RadioGroup';\nexport { TextInput } from './TextInput/CompoundTextInput';\nexport type { TextInputProps } from './TextInput/types';\nexport type { InputGroupProps } from './TextInput/input-group/InputGroup';\nexport { Switch } from './Switch';\nexport type { SwitchProps } from './Switch';\nexport { Textarea } from './Textarea';\nexport type { TextareaProps } from './Textarea';\nexport { Option } from './Select/SelectOption';\nexport type { OptionProps } from './Select/SelectOption';\nexport { Select } from './Select/CompoundSelect';\nexport type { SelectInternalProps, SelectProps } from './Select';\nexport { Form } from './Form';\nexport type { FormProps } from './Form';\nexport { Counter } from './Counter';\nexport type { CounterProps } from './Counter';\n","export { HelpText } from './HelpText';\nexport type { HelpTextProps } from './HelpText';\n","import React from 'react';\nimport type {\n  CommonProps,\n  MarginProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { useFormControl } from '../FormControl/FormControlContext';\n\nexport interface HelpTextInternalProps extends CommonProps, MarginProps {\n  children: React.ReactNode;\n}\n\nexport type HelpTextProps = PropsWithHTMLElement<HelpTextInternalProps, 'p'>;\n\n/**\n * `HelpText` is a styled copy block with guidance, placed in the context of form components.\n */\n\nexport const HelpText = React.forwardRef<\n  HTMLParagraphElement,\n  ExpandProps<HelpTextProps>\n>(({ testId = 'cf-ui-help-text', ...otherProps }, ref) => {\n  const { id } = useFormControl({});\n  return (\n    <Text\n      as=\"p\"\n      fontColor=\"gray500\"\n      fontSize=\"fontSizeM\"\n      testId={testId}\n      id={`${id}-helptext`}\n      marginTop=\"spacingXs\"\n      {...otherProps}\n      ref={ref}\n    />\n  );\n});\n\nHelpText.displayName = 'HelpText';\n","import { createContext, useContext } from 'react';\nimport type { FormControlContextProps } from './types';\n\nconst noop = () => {\n  // do nothing\n};\n\nexport const FormControlContext = createContext<\n  FormControlContextProps | undefined\n>(undefined);\n\nexport const useFormControlContext = () => {\n  const context = useContext(FormControlContext);\n  return context;\n};\n\nexport const useFormControl = (\n  props: Partial<FormControlContextProps>,\n): FormControlContextProps => {\n  const context = useFormControlContext();\n  if (!context) {\n    return props;\n  }\n  return {\n    isDisabled: props.isDisabled ?? context.isDisabled,\n    isInvalid: props.isInvalid ?? context.isInvalid,\n    isReadOnly: props.isReadOnly ?? context.isReadOnly,\n    isRequired: props.isRequired ?? context.isRequired,\n    id: props.id ?? context.id,\n    maxLength: context.maxLength,\n    inputValue: context.inputValue,\n    setMaxLength: context.setMaxLength || noop,\n    setInputValue: context.setInputValue || noop,\n  };\n};\n","export { ValidationMessage } from './ValidationMessage';\nexport type { ValidationMessageProps } from './ValidationMessage';\n","import React, { forwardRef } from 'react';\nimport { Flex } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  MarginProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { ErrorCircleOutlineIcon } from '@contentful/f36-icons';\nimport { Text } from '@contentful/f36-typography';\nimport { useFormControl } from '../FormControl/FormControlContext';\n\nexport interface ValidationMessageInternalProps\n  extends CommonProps,\n    MarginProps {\n  children: React.ReactNode;\n}\n\nexport type ValidationMessageProps = PropsWithHTMLElement<\n  ValidationMessageInternalProps,\n  'div'\n>;\n\nexport const ValidationMessage = forwardRef<\n  HTMLDivElement,\n  ExpandProps<ValidationMessageProps>\n>(({ children, testId = 'cf-ui-validation-message', ...otherProps }, ref) => {\n  const { id } = useFormControl({});\n  return (\n    <Flex\n      marginTop=\"spacingXs\"\n      {...otherProps}\n      ref={ref}\n      testId={testId}\n      alignItems=\"center\"\n      id={id ? `${id}-validation` : undefined}\n      aria-live=\"assertive\"\n    >\n      <Flex marginRight=\"spacing2Xs\">\n        <ErrorCircleOutlineIcon\n          size=\"small\"\n          variant=\"negative\"\n          aria-hidden=\"true\"\n        />\n      </Flex>\n      <Text as=\"p\" fontColor=\"colorNegative\">\n        {children}\n      </Text>\n    </Flex>\n  );\n});\n\nValidationMessage.displayName = 'ValidationMessage';\n","import { Checkbox as OriginalCheckbox } from './Checkbox';\nimport { CheckboxGroup } from './CheckboxGroup';\n\ntype CompoundCheckbox = typeof OriginalCheckbox & {\n  Group: typeof CheckboxGroup;\n};\n\nexport const Checkbox = OriginalCheckbox as CompoundCheckbox;\nCheckbox.Group = CheckboxGroup;\n","import React from 'react';\nimport { useId } from '@contentful/f36-core';\nimport type { ExpandProps } from '@contentful/f36-core';\nimport { BaseCheckbox, BaseCheckboxProps } from '../BaseCheckbox';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { useBaseCheckboxGroup } from '../BaseCheckbox/BaseCheckboxGroupContext';\n\nexport type CheckboxProps = Omit<BaseCheckboxProps, 'type' | 'size'>;\n\nconst _Checkbox = (\n  props: ExpandProps<CheckboxProps>,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const {\n    testId = 'cf-ui-checkbox',\n    id,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    children,\n    onBlur,\n    onChange,\n    defaultChecked,\n    isChecked,\n    value,\n    name,\n    ...otherProps\n  } = props;\n\n  const inputId = useId(id, 'checkbox');\n\n  const groupProps = useBaseCheckboxGroup({\n    onBlur,\n    onChange,\n    value,\n    defaultChecked,\n    isChecked,\n    name,\n  });\n\n  // Removes the not needed properties that comes from FormControl context.\n  const {\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n    isReadOnly,\n    ...formProps\n  } = useFormControl({\n    id: inputId,\n    isDisabled,\n    isInvalid,\n    isRequired,\n  });\n\n  return (\n    <BaseCheckbox\n      {...formProps}\n      {...groupProps}\n      {...otherProps}\n      type=\"checkbox\"\n      testId={testId}\n      ref={ref}\n    >\n      {children}\n    </BaseCheckbox>\n  );\n};\n\nexport const Checkbox = React.forwardRef(_Checkbox);\n","export { BaseCheckbox } from './BaseCheckbox';\nexport type { BaseCheckboxProps } from './BaseCheckbox';\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport type { PropsWithHTMLElement, ExpandProps } from '@contentful/f36-core';\nimport type { BaseCheckboxInternalProps } from './types';\nimport { GhostCheckbox } from './GhostCheckbox';\nimport getStyles from './BaseCheckbox.styles';\nimport { Text } from '@contentful/f36-typography';\nimport { Flex } from '@contentful/f36-core';\nimport { HelpText } from '../HelpText/HelpText';\nimport { useFormControl } from '../FormControl/FormControlContext';\n\nexport type BaseCheckboxProps = PropsWithHTMLElement<\n  BaseCheckboxInternalProps & { label?: string },\n  'label',\n  'htmlFor'\n>;\n\nfunction _BaseCheckbox(\n  props: ExpandProps<BaseCheckboxProps>,\n  ref: React.RefObject<HTMLInputElement>,\n) {\n  const {\n    isChecked = undefined,\n    onChange,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    type = 'checkbox',\n    value,\n    isDisabled,\n    isIndeterminate,\n    isInvalid,\n    isRequired = false,\n    id,\n    willBlurOnEsc = true,\n    testId = 'cf-ui-base-checkbox',\n    className = '',\n    defaultChecked = undefined,\n    name,\n    inputProps = {},\n    children,\n    'aria-label': ariaLabel,\n    size = 'medium',\n    helpText,\n    ...otherProps\n  } = props;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const finalRef = ref || inputRef;\n  const { id: formFieldId } = useFormControl({});\n\n  useEffect(() => {\n    if (finalRef.current) {\n      finalRef.current.indeterminate = isIndeterminate;\n    }\n  }, [isIndeterminate, finalRef]);\n\n  const styles = getStyles({ isDisabled, type, size });\n\n  const handleFocus = useCallback(\n    (e) => {\n      e.persist();\n      if (onFocus) {\n        onFocus(e);\n      }\n    },\n    [onFocus],\n  );\n\n  const handleBlur = useCallback(\n    (e) => {\n      e.persist();\n      if (onBlur) {\n        onBlur(e);\n      }\n    },\n    [onBlur],\n  );\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      e.persist();\n      if (willBlurOnEsc && e.key === 'Escape') {\n        finalRef?.current?.blur();\n      }\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    },\n    [willBlurOnEsc, onKeyDown, finalRef],\n  );\n\n  const ariaChecked =\n    typeof isChecked !== undefined ? isChecked : defaultChecked;\n\n  const helpTextId = id ? `${id}-helptext` : undefined;\n  const ariaDescribedBy = isInvalid\n    ? `${formFieldId}-validation`\n    : helpText\n    ? helpTextId\n    : undefined;\n\n  return (\n    <Flex flexDirection=\"column\" className={className}>\n      <Text\n        as=\"label\"\n        fontColor=\"gray900\"\n        fontWeight=\"fontWeightMedium\"\n        className={styles.wrapper}\n        htmlFor={id}\n        testId={testId}\n        {...otherProps}\n      >\n        <input\n          {...inputProps}\n          aria-label={ariaLabel}\n          checked={isChecked}\n          defaultChecked={defaultChecked}\n          className={styles.input}\n          type={type === 'switch' ? 'checkbox' : type}\n          onChange={onChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          value={value}\n          disabled={isDisabled}\n          role={type}\n          aria-checked={isIndeterminate ? 'mixed' : ariaChecked}\n          ref={finalRef}\n          required={isRequired}\n          aria-required={isRequired ? 'true' : undefined}\n          aria-invalid={isInvalid ? 'true' : undefined}\n          aria-describedby={ariaDescribedBy}\n          id={id}\n          name={name}\n        />\n        <GhostCheckbox\n          type={type}\n          isDisabled={isDisabled}\n          isIndeterminate={isIndeterminate}\n          size={size}\n        />\n        {children}\n      </Text>\n      {helpText && (\n        <HelpText id={helpTextId} className={styles.helpText}>\n          {helpText}\n        </HelpText>\n      )}\n    </Flex>\n  );\n}\n\n_BaseCheckbox.displayName = 'BaseCheckbox';\n\nexport const BaseCheckbox = React.forwardRef(_BaseCheckbox);\n","import React from 'react';\nimport { DoneIcon, MinusIcon, CloseIcon } from '@contentful/f36-icons';\nimport { BaseCheckboxInternalProps } from './types';\nimport getStyles from './GhostCheckbox.styles';\n\nexport type GhostCheckboxProps = Pick<\n  BaseCheckboxInternalProps,\n  'type' | 'isIndeterminate' | 'isDisabled' | 'size'\n>;\n\nexport const GhostCheckbox = (props: GhostCheckboxProps) => {\n  const { type, isIndeterminate, isDisabled, size = 'medium' } = props;\n  const styles = getStyles({ isDisabled, size });\n\n  if (type === 'switch') {\n    return (\n      <span className={styles.switch}>\n        <DoneIcon size=\"tiny\" variant=\"white\" />\n        <CloseIcon size=\"tiny\" variant=\"white\" />\n      </span>\n    );\n  }\n\n  return (\n    <span className={styles[type]}>\n      {type === 'checkbox' &&\n        (isIndeterminate ? (\n          <MinusIcon size=\"tiny\" variant=\"white\" />\n        ) : (\n          <DoneIcon size=\"tiny\" variant=\"white\" />\n        ))}\n    </span>\n  );\n};\n","import { css } from 'emotion';\nimport type { CSSObject } from '@emotion/serialize';\nimport type { GhostCheckboxProps } from './GhostCheckbox';\nimport tokens from '@contentful/f36-tokens';\n\ntype stylesArgs = Pick<GhostCheckboxProps, 'isDisabled' | 'size'>;\n\nconst getBaseGhostStyles = ({ isDisabled }): CSSObject => ({\n  alignItems: 'center',\n  background: !isDisabled ? tokens.colorWhite : tokens.gray300,\n  border: `2px solid ${tokens.gray300}`,\n  boxSizing: 'border-box',\n  display: 'inline-flex',\n  height: tokens.spacingM,\n  justifyContent: 'center',\n  marginRight: tokens.spacingXs,\n  width: tokens.spacingM,\n});\n\nconst getCheckboxStyles = ({ isDisabled }) => {\n  const baseStyle = {\n    ...getBaseGhostStyles({ isDisabled }),\n    backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray300,\n    borderRadius: tokens.borderRadiusSmall,\n    '& svg': {\n      fill: !isDisabled ? tokens.colorWhite : tokens.gray300,\n    },\n    'input:indeterminate + &, input:checked + &': {\n      backgroundColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n      borderColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n      '& svg': {\n        fill: !isDisabled ? tokens.colorWhite : tokens.gray600,\n      },\n    },\n  };\n\n  return css(baseStyle);\n};\n\nconst getRadioStyles = ({ isDisabled }) => {\n  const baseBefore = {\n    content: '\"\"',\n    borderRadius: '50%',\n    backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray300,\n    width: tokens.borderRadiusMedium,\n    height: tokens.borderRadiusMedium,\n  };\n\n  const baseStyle = {\n    ...getBaseGhostStyles({ isDisabled }),\n    backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray300,\n    borderRadius: '50%',\n    '&:before': {\n      ...baseBefore,\n    },\n    'input:checked + &': {\n      backgroundColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n      borderColor: !isDisabled ? tokens.blue600 : tokens.gray300,\n      '&:before': {\n        backgroundColor: !isDisabled ? tokens.colorWhite : tokens.gray600,\n      },\n    },\n  };\n\n  return css(baseStyle);\n};\n\nconst getSwitchStyles = ({ isDisabled, size }) => {\n  const sizeStyle =\n    size === 'small'\n      ? {\n          height: tokens.spacingM,\n          width: tokens.spacingXl,\n          '&:before': {\n            height: tokens.spacingS,\n            width: tokens.spacingS,\n          },\n          'input:checked + &:before': {\n            transform: `translateX(${tokens.spacingM})`,\n          },\n        }\n      : {\n          height: '20px',\n          width: '40px',\n          '&:before': {\n            height: tokens.spacingM,\n            width: tokens.spacingM,\n          },\n          'input:checked + &:before': {\n            transform: `translateX(20px)`,\n          },\n        };\n\n  const baseStyle: CSSObject = {\n    ...getBaseGhostStyles({ isDisabled }),\n    background: tokens.gray600,\n    borderColor: tokens.gray600,\n    borderRadius: tokens.borderRadiusSmall,\n    justifyContent: 'space-around',\n    position: 'relative',\n    '&:before': {\n      background: tokens.colorWhite,\n      borderRadius: `calc(${tokens.borderRadiusSmall}/2)`,\n      content: '\"\"',\n      left: 0,\n      position: 'absolute',\n      transition: `transform ${tokens.transitionEasingDefault} ${tokens.transitionDurationDefault}`,\n    },\n    'input:checked + &': {\n      background: tokens.blue600,\n      borderColor: tokens.blue600,\n    },\n  };\n\n  const disabledStyle: CSSObject = {\n    '&, input:checked + &': {\n      background: tokens.gray200,\n      borderColor: tokens.gray200,\n    },\n    '&:before': {\n      background: tokens.gray400,\n    },\n    '& svg': {\n      fill: tokens.gray400,\n    },\n  };\n\n  return css([baseStyle, sizeStyle, isDisabled && disabledStyle]);\n};\n\nconst getStyles = (args: stylesArgs) => {\n  const { isDisabled, size } = args;\n  return {\n    radio: getRadioStyles({ isDisabled }),\n    checkbox: getCheckboxStyles({ isDisabled }),\n    switch: getSwitchStyles({ isDisabled, size }),\n  };\n};\n\nexport default getStyles;\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport type { BaseCheckboxInternalProps } from './types';\n\nconst sizeToStyle = (size) => {\n  if (size === 'small') {\n    return {\n      height: tokens.spacingM,\n      width: tokens.spacingXl,\n    };\n  }\n\n  return {\n    height: '20px',\n    width: '40px',\n  };\n};\n\nconst getHelpTextStyle = ({ size, type }) => {\n  let inputWidth = tokens.spacingM;\n  if (type === 'switch') {\n    inputWidth = sizeToStyle(size).width;\n  }\n\n  return {\n    marginLeft: `calc(${inputWidth} + ${tokens.spacingXs})`,\n    marginTop: 0,\n  };\n};\n\nconst getStyles = ({\n  isDisabled,\n  type,\n  size,\n}: Pick<BaseCheckboxInternalProps, 'isDisabled' | 'type' | 'size'>) => ({\n  wrapper: css({\n    alignItems: 'center',\n    display: 'inline-flex',\n    position: 'relative',\n    margin: '0',\n  }),\n  input: css([\n    {\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\n      height: tokens.spacingM,\n      margin: 0,\n      opacity: 0,\n      position: 'absolute',\n      width: tokens.spacingM,\n      zIndex: tokens.zIndexDefault,\n      '&:focus': {\n        outline: 'none',\n        '& + span': {\n          boxShadow: tokens.glowPrimary,\n        },\n      },\n      '&:focus:not(:focus-visible) + span': {\n        boxShadow: 'unset',\n      },\n      '&:focus-visible + span': {\n        boxShadow: tokens.glowPrimary,\n      },\n    },\n    type === 'switch' && sizeToStyle(size),\n  ]),\n  helpText: css(getHelpTextStyle({ size, type })),\n});\n\nexport default getStyles;\n","import { createContext, useContext } from 'react';\nimport { BaseCheckboxProps } from './BaseCheckbox';\nimport { BaseCheckboxGroupProps } from './BaseCheckboxGroup';\n\nexport type BaseCheckboxGroupContextProps = Omit<\n  BaseCheckboxGroupProps,\n  'children'\n>;\nexport type BaseCheckboxGroupContextValue = Pick<\n  BaseCheckboxProps,\n  'isChecked' | 'defaultChecked' | 'onChange' | 'onBlur' | 'name' | 'value'\n>;\n\nexport const BaseCheckboxGroupContext = createContext<\n  BaseCheckboxGroupContextProps | undefined\n>(undefined);\n\nexport const useBaseCheckboxGroupContext = () => {\n  const context = useContext(BaseCheckboxGroupContext);\n  return context;\n};\n\nexport const useBaseCheckboxGroup = (\n  props: Partial<BaseCheckboxProps>,\n): BaseCheckboxGroupContextValue => {\n  const context = useBaseCheckboxGroupContext();\n  if (!context) {\n    return props;\n  }\n\n  let isChecked, defaultChecked;\n\n  if (context.type === 'checkbox') {\n    isChecked =\n      context.value === undefined\n        ? undefined\n        : context.value?.includes(props.value);\n    defaultChecked =\n      isChecked !== undefined\n        ? undefined\n        : context.defaultValue?.includes(props.value);\n  }\n\n  if (context.type === 'radio') {\n    isChecked =\n      context.value === undefined ? undefined : context.value === props.value;\n    defaultChecked =\n      isChecked !== undefined\n        ? undefined\n        : context.defaultValue === props.value;\n  }\n\n  const onChange = (event) => {\n    props.onChange && props.onChange(event);\n    context.onChange && context.onChange(event);\n  };\n\n  const onBlur = (event) => {\n    props.onBlur && props.onBlur(event);\n    context.onBlur && context.onBlur(event);\n  };\n\n  return {\n    defaultChecked,\n    isChecked,\n    onBlur,\n    onChange,\n    name: context.name ?? props.name,\n    value: props.value,\n  };\n};\n","import React from 'react';\nimport {\n  BaseCheckboxGroup,\n  BaseCheckboxGroupProps,\n} from '../BaseCheckbox/BaseCheckboxGroup';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport interface CheckboxGroupProps\n  extends Omit<BaseCheckboxGroupProps, 'type'> {\n  /**\n   * Array of values of the checkboxes that should be checked for uncontrolled inputs\n   */\n  defaultValue?: Array<string>;\n  /**\n   * Array of values of the checkboxes that should be checked for controlled inputs\n   */\n  value?: Array<string>;\n}\n\nexport const _CheckboxGroup = (\n  props: ExpandProps<CheckboxGroupProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { children, testId = 'cf-ui-checkbox-group', ...otherProps } = props;\n  return (\n    <BaseCheckboxGroup\n      ref={ref}\n      testId={testId}\n      type=\"checkbox\"\n      {...otherProps}\n    >\n      {children}\n    </BaseCheckboxGroup>\n  );\n};\n\nexport const CheckboxGroup = React.forwardRef(_CheckboxGroup);\n","import React, { ChangeEventHandler, FocusEventHandler } from 'react';\nimport { Stack } from '@contentful/f36-core';\nimport type { CommonProps, ExpandProps } from '@contentful/f36-core';\nimport { BaseCheckboxGroupContext } from './BaseCheckboxGroupContext';\n\nexport interface BaseCheckboxGroupProps extends CommonProps {\n  /**\n   * Handler that will be triggered when any checkbox inside the group loses focus\n   */\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n  /**\n   * Handler that will be triggered when any checkbox inside the group has their checked state changed\n   */\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  /**\n   * Name that will be assigned to all checkboxes inside the group, unless a different name is passed to the checkbox\n   */\n  name?: string;\n  /**\n   * Elements that should be in the group\n   */\n  children: React.ReactNode;\n  /**\n   * Type of the inputs used within the group\n   */\n  type: 'checkbox' | 'radio';\n  /**\n   * Array of values for checkboxes or single value for radio, that should be checked for uncontrolled inputs\n   */\n  defaultValue?: Array<string> | string;\n  /**\n   * Array of values for checkboxes or single value for radio, that should be checked for controlled inputs\n   */\n  value?: Array<string> | string;\n}\n\nexport const _BaseCheckboxGroup = (\n  props: ExpandProps<BaseCheckboxGroupProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    children,\n    className,\n    testId = 'cf-ui-base-checkbox-group',\n    ...contextProps\n  } = props;\n  return (\n    <BaseCheckboxGroupContext.Provider value={contextProps}>\n      <Stack\n        ref={ref}\n        testId={testId}\n        className={className}\n        flexDirection=\"column\"\n        alignItems=\"flex-start\"\n        spacing=\"spacingXs\"\n      >\n        {children}\n      </Stack>\n    </BaseCheckboxGroupContext.Provider>\n  );\n};\n\nexport const BaseCheckboxGroup = React.forwardRef(_BaseCheckboxGroup);\n","import { FormControl as OriginalFormControl } from './FormControl';\nimport { FormLabel } from '../FormLabel';\nimport { ValidationMessage } from '../ValidationMessage';\nimport { HelpText } from '../HelpText';\nimport { Counter } from '../Counter';\n\ntype CompoundFormControl = typeof OriginalFormControl & {\n  Label: typeof FormLabel;\n  ValidationMessage: typeof ValidationMessage;\n  HelpText: typeof HelpText;\n  Counter: typeof Counter;\n};\n\nexport const FormControl = OriginalFormControl as CompoundFormControl;\nFormControl.Label = FormLabel;\nFormControl.ValidationMessage = ValidationMessage;\nFormControl.HelpText = HelpText;\nFormControl.Counter = Counter;\n","import React, { useState } from 'react';\nimport { useId } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Box } from '@contentful/f36-core';\n\nimport { FormControlContext } from './FormControlContext';\nimport type { FormControlContextProps } from './types';\n\nconst FORM_CONTROL_DEFAULT_TAG = 'div';\n\nexport interface FormControlInternalProps\n  extends FormControlContextProps,\n    CommonProps,\n    MarginProps {\n  as?: 'div' | 'fieldset';\n  children: React.ReactNode;\n}\n\nexport type FormControlProps<\n  E extends React.ElementType = typeof FORM_CONTROL_DEFAULT_TAG\n> = PolymorphicProps<FormControlInternalProps, E>;\n\nfunction _FormControl<\n  E extends React.ElementType = typeof FORM_CONTROL_DEFAULT_TAG\n>(\n  {\n    as,\n    isInvalid,\n    isRequired,\n    isDisabled,\n    isReadOnly,\n    children,\n    marginBottom = 'spacingL',\n    id,\n    testId = 'cf-ui-form-control',\n    ...otherProps\n  }: FormControlProps<E>,\n  ref: React.Ref<any>,\n) {\n  const generatedId = useId(id, 'field-');\n  const [inputValue, setInputValue] = useState('');\n  const [maxLength, setMaxLength] = useState(0);\n  const roleAttr = as === 'fieldset' ? undefined : 'group';\n  const Element: React.ElementType = as || FORM_CONTROL_DEFAULT_TAG;\n\n  const context = {\n    id: generatedId,\n    isRequired,\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n  };\n\n  return (\n    <FormControlContext.Provider value={context}>\n      <Box\n        as={Element}\n        ref={ref}\n        role={roleAttr}\n        testId={testId}\n        marginBottom={marginBottom}\n        {...otherProps}\n      >\n        {children}\n      </Box>\n    </FormControlContext.Provider>\n  );\n}\n\n_FormControl.displayName = 'FormControl';\n\nexport const FormControl: PolymorphicComponent<\n  ExpandProps<FormControlInternalProps>,\n  typeof FORM_CONTROL_DEFAULT_TAG\n> = React.forwardRef(_FormControl);\n","export { FormLabel } from './FormLabel';\nexport type { FormLabelInternalProps, FormLabelProps } from './FormLabel';\n","import { cx } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport type { ReactNode } from 'react';\nimport { getFormLabelStyles } from './FormLabel.styles';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport type {\n  CommonProps,\n  MarginProps,\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\n\nexport interface FormLabelInternalProps extends CommonProps, MarginProps {\n  /**\n   * Label value to show\n   */\n  children: ReactNode;\n  /**\n   * Whether or not the associated input element is required\n   *\n   * @default false\n   */\n  isRequired?: boolean;\n  /**\n   * Custom text to show in parentheses that gets rendered if the associated\n   * input is required\n   *\n   * @default \"required\"\n   */\n  requiredText?: string;\n  /**\n   * Defines how the element will be rendered\n   * @default label\n   */\n  as?: 'label' | 'legend';\n}\n\nconst FORM_LABEL_DEFAULT_TAG = 'label';\n\nexport type FormLabelProps<\n  E extends React.ElementType = typeof FORM_LABEL_DEFAULT_TAG\n> = PolymorphicProps<FormLabelInternalProps, E>;\n\nfunction _FormLabel<\n  E extends React.ElementType = typeof FORM_LABEL_DEFAULT_TAG\n>(\n  {\n    as,\n    children,\n    className,\n    isRequired,\n    requiredText = 'required',\n    testId = 'cf-ui-form-label',\n    ...otherProps\n  }: FormLabelProps<E>,\n  forwardedRef: React.Ref<HTMLLabelElement>,\n) {\n  const styles = getFormLabelStyles();\n  const formControlProps = useFormControl({ isRequired });\n\n  const id = formControlProps.id ? formControlProps.id + '-label' : undefined;\n\n  const labelProps =\n    as !== 'legend'\n      ? {\n          htmlFor: otherProps.htmlFor || formControlProps.id,\n        }\n      : {};\n\n  const Element: React.ElementType = as || FORM_LABEL_DEFAULT_TAG;\n\n  return (\n    <Text\n      as={Element}\n      marginBottom=\"spacingXs\"\n      {...otherProps}\n      fontColor=\"gray900\"\n      id={id}\n      {...labelProps}\n      className={cx(styles.root, className)}\n      ref={forwardedRef}\n      testId={testId}\n    >\n      {children}\n      {formControlProps.isRequired && (\n        <span className={styles.indicator}>({requiredText})</span>\n      )}\n    </Text>\n  );\n}\n\n_FormLabel.displayName = 'FormLabel';\n\nexport const FormLabel: PolymorphicComponent<\n  ExpandProps<FormLabelInternalProps>,\n  typeof FORM_LABEL_DEFAULT_TAG\n> = forwardRef(_FormLabel);\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getFormLabelStyles() {\n  return {\n    root: css({\n      display: 'inline-block',\n      fontWeight: tokens.fontWeightMedium,\n    }),\n    indicator: css({\n      color: tokens.gray500,\n      fontWeight: tokens.fontWeightNormal,\n      marginLeft: tokens.spacing2Xs,\n    }),\n  };\n}\n","export { Counter } from './Counter';\nexport type { CounterProps } from './Counter';\n","import React, { forwardRef } from 'react';\nimport { cx } from 'emotion';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { getCounterStyles } from './Counter.styles';\n\nimport { useFormControl } from '../FormControl/FormControlContext';\n\nexport type CounterProps = PropsWithHTMLElement<CommonProps, 'p'>;\n\nexport const Counter = forwardRef<\n  HTMLParagraphElement,\n  ExpandProps<CounterProps>\n>(({ testId = 'cf-ui-counter', className, ...otherProps }, ref) => {\n  const { maxLength, inputValue } = useFormControl({});\n  const styles = getCounterStyles();\n\n  return (\n    Boolean(maxLength) && (\n      <Text\n        as=\"p\"\n        fontColor=\"gray700\"\n        fontSize=\"fontSizeM\"\n        testId={testId}\n        marginTop=\"spacingXs\"\n        {...otherProps}\n        className={cx(styles.root, className)}\n        ref={ref}\n      >\n        {inputValue.length} / {maxLength}\n      </Text>\n    )\n  );\n});\n\nCounter.displayName = 'Counter';\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getCounterStyles() {\n  return {\n    root: css({\n      flexShrink: 0,\n      paddingLeft: tokens.spacingM,\n      textAlign: 'right',\n    }),\n  };\n}\n","import { Radio as OriginalRadio } from './Radio';\nimport { RadioGroup } from './RadioGroup';\n\ntype CompoundRadio = typeof OriginalRadio & {\n  Group: typeof RadioGroup;\n};\n\nexport const Radio = OriginalRadio as CompoundRadio;\nRadio.Group = RadioGroup;\n","import React from 'react';\nimport { useId } from '@contentful/f36-core';\nimport type { ExpandProps } from '@contentful/f36-core';\nimport { BaseCheckbox, BaseCheckboxProps } from '../BaseCheckbox';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { useBaseCheckboxGroup } from '../BaseCheckbox/BaseCheckboxGroupContext';\n\nexport type RadioProps = Omit<\n  BaseCheckboxProps,\n  'type' | 'isIndeterminate' | 'size'\n>;\n\nconst _Radio = (\n  props: ExpandProps<RadioProps>,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const {\n    testId = 'cf-ui-radio-button',\n    id,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    children,\n    onBlur,\n    onChange,\n    defaultChecked,\n    isChecked,\n    value,\n    name,\n    ...otherProps\n  } = props;\n\n  const inputId = useId(id, 'radio');\n\n  const groupProps = useBaseCheckboxGroup({\n    onBlur,\n    onChange,\n    value,\n    defaultChecked,\n    isChecked,\n    name,\n  });\n\n  // Removes the not needed properties that comes from FormControl context.\n  const {\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n    isReadOnly,\n    ...formProps\n  } = useFormControl({\n    id: inputId,\n    isDisabled,\n    isInvalid,\n    isRequired,\n  });\n\n  return (\n    <BaseCheckbox\n      {...formProps}\n      {...otherProps}\n      {...groupProps}\n      type=\"radio\"\n      testId={testId}\n      ref={ref}\n    >\n      {children}\n    </BaseCheckbox>\n  );\n};\n\nexport const Radio = React.forwardRef(_Radio);\n","import React from 'react';\nimport {\n  BaseCheckboxGroup,\n  BaseCheckboxGroupProps,\n} from '../BaseCheckbox/BaseCheckboxGroup';\n\nexport interface RadioGroupProps extends Omit<BaseCheckboxGroupProps, 'type'> {\n  /**\n   * Value of the radio that should be checked for uncontrolled inputs\n   */\n  defaultValue?: string;\n  /**\n   * Value of the radio that should be checked for controlled inputs\n   */\n  value?: string;\n}\n\nexport const _RadioGroup = (\n  props: RadioGroupProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { children, testId = 'cf-ui-radio-group', ...groupProps } = props;\n  return (\n    <BaseCheckboxGroup ref={ref} testId={testId} type=\"radio\" {...groupProps}>\n      {children}\n    </BaseCheckboxGroup>\n  );\n};\n\nexport const RadioGroup = React.forwardRef(_RadioGroup);\n","import { TextInput as OriginalTextInput } from './TextInput';\nimport { InputGroup } from './input-group/InputGroup';\n\ntype CompoundTextInput = typeof OriginalTextInput & {\n  Group: typeof InputGroup;\n};\n\nexport const TextInput = OriginalTextInput as CompoundTextInput;\nTextInput.Group = InputGroup;\n","import React, { useRef, useEffect } from 'react';\nimport { BaseInput } from '../BaseInput';\nimport { TextInputProps } from './types';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport const _TextInput = (\n  {\n    className,\n    testId = 'cf-ui-text-input',\n    id,\n    value,\n    defaultValue,\n    onChange,\n    onFocus,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n    size = 'medium',\n    maxLength,\n    ...otherProps\n  }: ExpandProps<TextInputProps>,\n  ref: React.RefObject<HTMLInputElement>,\n) => {\n  const {\n    setMaxLength,\n    maxLength: contextMaxLength,\n    setInputValue,\n    inputValue: contextInputValue,\n    ...formProps\n  } = useFormControl({\n    id,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n  });\n\n  useEffect(() => {\n    if (maxLength !== undefined && typeof setMaxLength === 'function') {\n      setMaxLength(maxLength);\n      setInputValue(value ?? defaultValue ?? '');\n    }\n  }, [maxLength, setMaxLength, setInputValue, defaultValue, value]);\n\n  const handleOnChange = (event) => {\n    if (typeof setInputValue === 'function') {\n      setInputValue(event.target.value);\n    }\n    onChange?.(event);\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const finalRef = ref || inputRef;\n\n  return (\n    <BaseInput\n      type=\"text\"\n      {...otherProps}\n      {...formProps}\n      testId={testId}\n      ref={finalRef}\n      onChange={maxLength ? handleOnChange : onChange}\n      onFocus={onFocus}\n      as=\"input\"\n      className={className}\n      value={value}\n      defaultValue={defaultValue}\n      size={size}\n      maxLength={maxLength}\n    />\n  );\n};\n\nexport const TextInput = React.forwardRef(_TextInput);\n","export { BaseInput } from './BaseInput';\nexport type { BaseInputProps } from './BaseInput';\n","import React, {\n  useCallback,\n  FocusEvent,\n  KeyboardEvent,\n  ChangeEvent,\n} from 'react';\nimport { cx } from 'emotion';\n\nimport { Box } from '@contentful/f36-core';\nimport type {\n  PolymorphicProps,\n  PolymorphicComponent,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport getInputStyles from './BaseInput.styles';\nimport { BaseInputInternalProps } from './types';\n\nconst INPUT_DEFAULT_TAG = 'input';\n\nexport type BaseInputProps<\n  E extends React.ElementType = typeof INPUT_DEFAULT_TAG\n> = PolymorphicProps<\n  BaseInputInternalProps,\n  E,\n  'disabled' | 'required' | 'readOnly'\n>;\n\nfunction _BaseInput<E extends React.ElementType = typeof INPUT_DEFAULT_TAG>(\n  props: BaseInputProps<E>,\n  ref: React.Ref<HTMLInputElement | HTMLTextAreaElement>,\n) {\n  const {\n    as = INPUT_DEFAULT_TAG,\n    className,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    onKeyDown,\n    testId = 'cf-ui-base-input',\n    type = 'text',\n    value = undefined,\n    placeholder,\n    willBlurOnEsc = true,\n    style,\n    icon,\n    defaultValue,\n    size = 'medium',\n    resize = 'vertical',\n    ...otherProps\n  } = props;\n  const styles = getInputStyles({ as, isDisabled, isInvalid, size, resize });\n\n  const handleFocus = useCallback(\n    (e: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      e.persist();\n      if (onFocus) {\n        onFocus(e);\n      }\n    },\n    [onFocus],\n  );\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      e.persist();\n      if (isDisabled || isReadOnly) return;\n\n      if (onChange) {\n        onChange(e);\n      }\n    },\n    [onChange, isDisabled, isReadOnly],\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      e.persist();\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n\n      if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {\n        e.currentTarget.blur();\n      }\n    },\n    [willBlurOnEsc, onKeyDown],\n  );\n\n  const iconContent = icon && (\n    <Box as=\"span\" className={styles.iconPlaceholder}>\n      {React.cloneElement(icon, {\n        size: size === 'small' ? 'tiny' : 'small',\n        variant: 'muted',\n        'aria-hidden': true,\n      })}\n    </Box>\n  );\n\n  const Element = as as React.ElementType;\n\n  const inputContent = (iconClassName?: string) => (\n    <Element\n      {...otherProps}\n      value={value}\n      defaultValue={defaultValue}\n      data-test-id={testId}\n      style={style}\n      placeholder={placeholder}\n      className={cx(styles.input, iconClassName, className)}\n      name={name}\n      type={type}\n      ref={ref}\n      id={id}\n      readOnly={isReadOnly}\n      aria-readonly={isReadOnly ? 'true' : undefined}\n      aria-required={isRequired ? 'true' : undefined}\n      aria-invalid={isInvalid ? 'true' : undefined}\n      aria-describedby={\n        id ? `${id}-${isInvalid ? `validation` : `helptext`}` : undefined\n      }\n      disabled={isDisabled}\n      required={isRequired}\n      onChange={handleChange}\n      onBlur={onBlur}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      size={size}\n    />\n  );\n\n  if (icon) {\n    return (\n      <Box as=\"div\" className={styles.rootComponentWithIcon}>\n        {inputContent(styles.inputWithIcon)}\n        {iconContent}\n      </Box>\n    );\n  }\n\n  return inputContent();\n}\n\n_BaseInput.displayName = 'BaseInput';\n\nexport const BaseInput: PolymorphicComponent<\n  ExpandProps<BaseInputInternalProps>,\n  typeof INPUT_DEFAULT_TAG,\n  'disabled'\n> = React.forwardRef(_BaseInput);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport type { CSSObject } from '@emotion/serialize';\n\nconst getSizeStyles = ({ size }): CSSObject => {\n  if (size === 'small') {\n    return {\n      padding: `${tokens.spacing2Xs} ${tokens.spacingXs}`,\n      height: '32px',\n      maxHeight: '32px',\n    };\n  }\n\n  return {\n    height: '40px',\n    maxHeight: '40px',\n  };\n};\n\nconst getStyles = ({ as, isDisabled, isInvalid, size, resize }) => ({\n  rootComponentWithIcon: css({\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  }),\n  input: css({\n    outline: 'none',\n    boxShadow: tokens.insetBoxShadowDefault,\n    boxSizing: 'border-box',\n    backgroundColor: isDisabled ? tokens.gray100 : tokens.colorWhite,\n    border: `1px solid ${isInvalid ? tokens.red600 : tokens.gray300}`,\n    borderRadius: tokens.borderRadiusMedium,\n    color: tokens.gray700,\n    fontFamily: tokens.fontStackPrimary,\n    fontSize: tokens.fontSizeM,\n    lineHeight: tokens.lineHeightM,\n    padding: `10px ${tokens.spacingS}`,\n    margin: 0,\n    cursor: isDisabled ? 'not-allowed' : 'auto',\n    width: '100%',\n\n    // if the input is a textarea, the resize prop is applied and size should be ignored\n    ...(as === 'textarea' ? { resize } : getSizeStyles({ size })),\n\n    '&::placeholder': {\n      color: tokens.gray500,\n    },\n\n    '&:active, &:active:hover': {\n      borderColor: isInvalid\n        ? tokens.red600\n        : isDisabled\n        ? tokens.gray300\n        : tokens.blue600,\n      boxShadow: isInvalid\n        ? tokens.glowNegative\n        : isDisabled\n        ? 'none'\n        : tokens.glowPrimary,\n    },\n\n    '&:focus': {\n      borderColor: isInvalid\n        ? tokens.red600\n        : isDisabled\n        ? tokens.gray300\n        : tokens.blue600,\n      boxShadow: isInvalid\n        ? tokens.glowNegative\n        : isDisabled\n        ? 'none'\n        : tokens.glowPrimary,\n    },\n  }),\n\n  inputWithIcon: css({\n    paddingLeft: size === 'small' ? tokens.spacingXl : '38px',\n  }),\n\n  iconPlaceholder: css({\n    position: 'absolute',\n    pointerEvents: 'none',\n    top: 0,\n    bottom: 0,\n    left: size === 'small' ? tokens.spacingXs : tokens.spacingS,\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: tokens.zIndexDefault,\n  }),\n});\n\nexport default getStyles;\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { Stack } from '@contentful/f36-core';\nimport type { ExpandProps, CommonProps } from '@contentful/f36-core';\nimport getStyles from './InputGroup.styles';\nimport type { InputGroupSpacing } from './types';\n\nexport interface InputGroupProps extends CommonProps {\n  /**\n   * Sets the spacing of the elements if variant is separate.\n   * @default spacingS\n   */\n  spacing?: InputGroupSpacing;\n  children: React.ReactNode;\n}\n\nconst _InputGroup = (\n  props: ExpandProps<InputGroupProps>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { children, className, spacing = 'none', ...otherProps } = props;\n  const styles = getStyles({ spacing });\n  return (\n    <Stack\n      {...otherProps}\n      spacing={spacing}\n      ref={ref}\n      fullWidth\n      className={cx(styles.inputGroup, className)}\n    >\n      {children}\n    </Stack>\n  );\n};\n\nexport const InputGroup = React.forwardRef(_InputGroup);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport type { GetStyleArguments } from './types';\n\nconst getInputGroupStyle = ({ spacing }) => {\n  if (spacing !== 'none') {\n    return;\n  }\n\n  return css({\n    position: 'relative',\n\n    '& button, & input': {\n      borderRadius: '0 !important',\n    },\n    '& > *': {\n      marginRight: '-1px !important',\n      zIndex: tokens.zIndexDefault,\n      '&:not(:focus), & button:not(:focus)': {\n        boxShadow: 'none !important',\n      },\n      '&:first-child, &:first-child > input, &:first-child button': {\n        borderBottomLeftRadius: `${tokens.borderRadiusMedium} !important`,\n        borderTopLeftRadius: `${tokens.borderRadiusMedium} !important`,\n      },\n      '&:last-child, &:last-child > input, &:last-child button': {\n        borderBottomRightRadius: `${tokens.borderRadiusMedium} !important`,\n        borderTopRightRadius: `${tokens.borderRadiusMedium} !important`,\n        marginRight: '0 !important',\n      },\n      '&:focus, &:focus-within': {\n        zIndex: tokens.zIndexDefault + 1,\n      },\n    },\n  });\n};\n\nexport default ({ spacing }: GetStyleArguments) => ({\n  inputGroup: getInputGroupStyle({ spacing }),\n});\n","export { Switch } from './Switch';\nexport type { SwitchProps } from './Switch';\n","import React from 'react';\nimport { BaseCheckbox, BaseCheckboxProps } from '../BaseCheckbox';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport type SwitchProps = Omit<BaseCheckboxProps, 'type' | 'isIndeterminate'>;\n\nconst _Switch = (\n  props: ExpandProps<SwitchProps>,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const {\n    testId = 'cf-ui-switch',\n    id,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    children,\n    ...otherProps\n  } = props;\n\n  // Removes the not needed properties that comes from FormControl context.\n  const {\n    inputValue,\n    setInputValue,\n    maxLength,\n    setMaxLength,\n    isReadOnly,\n    ...formProps\n  } = useFormControl({\n    id,\n    isDisabled,\n    isInvalid,\n    isRequired,\n  });\n\n  return (\n    <BaseCheckbox\n      {...formProps}\n      {...otherProps}\n      testId={testId}\n      type=\"switch\"\n      ref={ref}\n    >\n      {children}\n    </BaseCheckbox>\n  );\n};\n\nexport const Switch = React.forwardRef(_Switch);\n","export { Textarea } from './Textarea';\nexport type { TextareaProps } from './Textarea';\n","import React, { useEffect } from 'react';\nimport { cx } from 'emotion';\n\nimport { BaseInput } from '../BaseInput';\nimport type { BaseInputProps } from '../BaseInput';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { getStyles } from './Textarea.styles';\nimport type { ExpandProps } from '@contentful/f36-core';\n\nexport interface TextareaProps\n  extends Omit<BaseInputProps<'textarea'>, 'as' | 'type' | 'size'> {\n  /**\n   * Set's default value for textarea\n   */\n  defaultValue?: string;\n}\n\nconst _Textarea = (\n  {\n    className,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    isReadOnly,\n    onChange,\n    testId = 'cf-ui-textarea',\n    id,\n    resize = 'vertical',\n    maxLength,\n    value,\n    defaultValue,\n    ...otherProps\n  }: ExpandProps<TextareaProps>,\n  ref: React.Ref<HTMLTextAreaElement>,\n) => {\n  const styles = getStyles();\n\n  const {\n    setMaxLength,\n    maxLength: contextMaxLength,\n    setInputValue,\n    inputValue: contextInputValue,\n    ...formProps\n  } = useFormControl({\n    id,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    isReadOnly,\n  });\n\n  useEffect(() => {\n    if (maxLength !== undefined && typeof setMaxLength === 'function') {\n      setMaxLength(maxLength);\n      setInputValue(value ?? defaultValue ?? '');\n    }\n  }, [defaultValue, maxLength, setInputValue, setMaxLength, value]);\n\n  const handleOnChange = (event) => {\n    if (typeof setInputValue === 'function') {\n      setInputValue(event.target.value);\n    }\n    onChange?.(event);\n  };\n\n  return (\n    <BaseInput\n      {...otherProps}\n      {...formProps}\n      defaultValue={defaultValue}\n      value={value}\n      testId={testId}\n      as=\"textarea\"\n      ref={ref}\n      className={cx(className, {\n        [styles.disabled]: isDisabled,\n        [styles.error]: isInvalid,\n      })}\n      maxLength={maxLength}\n      resize={resize}\n      onChange={maxLength ? handleOnChange : onChange}\n    />\n  );\n};\n\n/**\n * Textarea is a form component that allows the user to enter a sizeable amount of multi-line plain text.\n */\nexport const Textarea = React.forwardRef(_Textarea);\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getStyles = () => {\n  return {\n    error: css({\n      '&:focus': {\n        borderColor: tokens.colorNegative,\n        boxShadow: tokens.glowNegative,\n      },\n    }),\n    disabled: css({\n      '&:focus': {\n        borderColor: tokens.gray300,\n        boxShadow: 'none',\n      },\n    }),\n  };\n};\n","import React from 'react';\nimport type { CommonProps, PropsWithHTMLElement } from '@contentful/f36-core';\n\nexport type OptionInternalProps = CommonProps & {\n  isDisabled?: boolean;\n};\n\nexport type OptionProps = PropsWithHTMLElement<\n  OptionInternalProps,\n  'option',\n  'defaultChecked' | 'defaultValue' | 'selected' | 'disabled'\n>;\n\nexport const Option = ({\n  testId = 'cf-ui-select-option',\n  isDisabled,\n  ...otherProps\n}: OptionProps) => {\n  return <option data-test-id={testId} {...otherProps} disabled={isDisabled} />;\n};\n","import { Select as OriginalSelect } from './Select';\nimport { Option } from './SelectOption';\n\ntype CompoundSelect = typeof OriginalSelect & {\n  Option: typeof Option;\n};\n\nexport const Select = OriginalSelect as CompoundSelect;\nSelect.Option = Option;\n","import React, {\n  useCallback,\n  KeyboardEvent,\n  ReactNode,\n  ChangeEventHandler,\n} from 'react';\nimport { cx } from 'emotion';\nimport { ChevronDownIcon } from '@contentful/f36-icons';\n\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport { useFormControl } from '../FormControl/FormControlContext';\nimport { getSelectStyles } from './Select.styles';\n\nexport type SelectSize = 'small' | 'medium';\n\nexport type SelectInternalProps = CommonProps & {\n  isRequired?: boolean;\n  isInvalid?: boolean;\n  isDisabled?: boolean;\n  onChange?: ChangeEventHandler<HTMLSelectElement>;\n  children: ReactNode;\n  willBlurOnEsc?: boolean;\n  size?: SelectSize;\n  value?: string;\n  defaultValue?: string;\n};\n\nexport type SelectProps = PropsWithHTMLElement<\n  SelectInternalProps,\n  'select',\n  'disabled' | 'required'\n>;\n\nconst _Select = (\n  {\n    id,\n    children,\n    className,\n    isInvalid,\n    isDisabled,\n    isRequired,\n    testId = 'cf-ui-select',\n    willBlurOnEsc = true,\n    onKeyDown,\n    size = 'medium',\n    value = undefined,\n    defaultValue = undefined,\n    ...otherProps\n  }: ExpandProps<SelectProps>,\n  ref: React.Ref<HTMLSelectElement>,\n) => {\n  const formProps = useFormControl({\n    isDisabled,\n    isInvalid,\n    isRequired,\n    id,\n  });\n\n  const styles = getSelectStyles({\n    isDisabled: formProps.isDisabled,\n    isInvalid: formProps.isInvalid,\n    size,\n  });\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLSelectElement>) => {\n      if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {\n        e.currentTarget.blur();\n      }\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    },\n    [onKeyDown, willBlurOnEsc],\n  );\n\n  return (\n    <div className={cx(styles.wrapper, className)}>\n      <select\n        {...otherProps}\n        id={formProps.id}\n        data-test-id={testId}\n        className={styles.select}\n        onKeyDown={handleKeyDown}\n        required={formProps.isRequired}\n        aria-required={formProps.isRequired ? 'true' : undefined}\n        aria-invalid={formProps.isInvalid ? true : undefined}\n        aria-describedby={\n          formProps.id\n            ? `${formProps.id}-${\n                formProps.isInvalid ? `validation` : `helptext`\n              }`\n            : undefined\n        }\n        disabled={formProps.isDisabled}\n        defaultValue={defaultValue}\n        value={value}\n        ref={ref}\n      >\n        {children}\n      </select>\n      <ChevronDownIcon className={styles.icon} variant=\"muted\" />\n    </div>\n  );\n};\n\nexport const Select = React.forwardRef(_Select);\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getSelectStyles({ isInvalid, isDisabled, size }) {\n  const sizeStyles =\n    size === 'small'\n      ? {\n          padding: `${tokens.spacing2Xs} ${tokens.spacingXs}`,\n          height: '32px',\n        }\n      : {\n          padding: `10px ${tokens.spacingL} 10px ${tokens.spacingS}`,\n          height: '40px',\n        };\n\n  const select = css({\n    width: '100%',\n    display: 'block',\n    appearance: 'none',\n    backgroundColor: tokens.colorWhite,\n    color: tokens.gray700,\n\n    fontSize: tokens.fontSizeM,\n    lineHeight: tokens.lineHeightM,\n    fontFamily: tokens.fontStackPrimary,\n    borderRadius: tokens.borderRadiusMedium,\n    boxShadow: tokens.insetBoxShadowDefault,\n    outline: 'none',\n    border: `1px solid ${tokens.gray300}`,\n    cursor: 'pointer',\n\n    '&::placeholder': {\n      color: tokens.gray500,\n    },\n    '&:focus': {\n      outline: 'none',\n      boxShadow: tokens.glowPrimary,\n      borderColor: tokens.colorPrimary,\n    },\n    '&:-moz-focusring': { color: 'transparent', textShadow: '0 0 0 #000' },\n    '&::-ms-expand': { display: 'none' },\n  });\n\n  const disabled = css({\n    backgroundColor: tokens.gray100,\n    cursor: 'not-allowed',\n    color: tokens.gray600,\n    '&:focus, &:active': { borderColor: tokens.gray300 },\n  });\n\n  const invalid = css({\n    borderColor: isDisabled ? tokens.red300 : tokens.red600,\n    '&:focus': {\n      borderColor: tokens.red600,\n      boxShadow: tokens.glowNegative,\n    },\n  });\n\n  return {\n    wrapper: css({\n      position: 'relative',\n      display: 'block',\n      width: 'auto',\n    }),\n    select: css([\n      select,\n      sizeStyles,\n      isDisabled && disabled,\n      isInvalid && invalid,\n    ]),\n    icon: css({\n      position: 'absolute',\n      right: tokens.spacingXs,\n      top: '50%',\n      marginTop: '-8px',\n      pointerEvents: 'none',\n    }),\n  };\n}\n","export { Form } from './Form';\nexport type { FormProps } from './Form';\n","import React, { forwardRef, useCallback, FormEvent } from 'react';\n\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\n\nexport type FormProps = PropsWithHTMLElement<CommonProps, 'form'>;\n\nfunction _Form(\n  {\n    children,\n    onSubmit,\n    testId = 'cf-ui-form-label',\n    ...otherProps\n  }: ExpandProps<FormProps>,\n  ref: React.Ref<HTMLFormElement>,\n) {\n  const handleSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      if (onSubmit) {\n        onSubmit(event);\n      }\n    },\n    [onSubmit],\n  );\n  return (\n    <form\n      ref={ref}\n      data-test-id={testId}\n      onSubmit={handleSubmit}\n      {...otherProps}\n    >\n      {children}\n    </form>\n  );\n}\n\n_Form.displayName = 'Form';\n\nexport const Form = forwardRef(_Form);\n"],"names":["HelpText","HelpTextProps","ValidationMessage","ValidationMessageProps","Checkbox","CheckboxProps","CheckboxGroupProps","FormControl","FormControlProps","FormControlInternalProps","FormLabel","FormLabelInternalProps","FormLabelProps","Radio","RadioProps","RadioGroupProps","TextInput","TextInputProps","InputGroupProps","Switch","SwitchProps","Textarea","TextareaProps","Option","OptionProps","Select","SelectInternalProps","SelectProps","Form","FormProps","Counter","CounterProps","React","CommonProps","MarginProps","PropsWithHTMLElement","ExpandProps","Text","useFormControl","HelpTextInternalProps","children","ReactNode","forwardRef","HTMLParagraphElement","testId","otherProps","ref","id","displayName","createContext","useContext","FormControlContextProps","noop","FormControlContext","undefined","useFormControlContext","context","props","Partial","isDisabled","isInvalid","isReadOnly","isRequired","maxLength","inputValue","setMaxLength","setInputValue","Flex","ErrorCircleOutlineIcon","ValidationMessageInternalProps","HTMLDivElement","OriginalCheckbox","CheckboxGroup","CompoundCheckbox","Group","useId","BaseCheckbox","BaseCheckboxProps","useBaseCheckboxGroup","Omit","_Checkbox","Ref","HTMLInputElement","onBlur","onChange","defaultChecked","isChecked","value","name","inputId","groupProps","formProps","useCallback","useEffect","useRef","BaseCheckboxInternalProps","GhostCheckbox","getStyles","label","_BaseCheckbox","RefObject","onFocus","onKeyDown","type","isIndeterminate","willBlurOnEsc","className","inputProps","ariaLabel","size","helpText","inputRef","finalRef","formFieldId","current","indeterminate","styles","handleFocus","e","persist","handleBlur","handleKeyDown","key","blur","ariaChecked","helpTextId","ariaDescribedBy","wrapper","input","DoneIcon","MinusIcon","CloseIcon","GhostCheckboxProps","Pick","switch","CSSObject","tokens","stylesArgs","getBaseGhostStyles","alignItems","background","colorWhite","gray300","border","boxSizing","display","height","spacingM","justifyContent","marginRight","spacingXs","width","getCheckboxStyles","baseStyle","backgroundColor","borderRadius","borderRadiusSmall","fill","blue600","borderColor","gray600","getRadioStyles","baseBefore","content","borderRadiusMedium","getSwitchStyles","sizeStyle","spacingXl","spacingS","transform","position","left","transition","transitionEasingDefault","transitionDurationDefault","disabledStyle","gray200","gray400","args","radio","checkbox","sizeToStyle","getHelpTextStyle","inputWidth","marginLeft","marginTop","cursor","margin","opacity","zIndex","zIndexDefault","outline","boxShadow","glowPrimary","BaseCheckboxGroupProps","BaseCheckboxGroupContextProps","BaseCheckboxGroupContextValue","BaseCheckboxGroupContext","useBaseCheckboxGroupContext","includes","defaultValue","event","BaseCheckboxGroup","Array","_CheckboxGroup","ChangeEventHandler","FocusEventHandler","Stack","_BaseCheckboxGroup","contextProps","OriginalFormControl","CompoundFormControl","Label","useState","PolymorphicProps","PolymorphicComponent","Box","FORM_CONTROL_DEFAULT_TAG","as","ElementType","E","_FormControl","marginBottom","generatedId","roleAttr","Element","getFormLabelStyles","requiredText","FORM_LABEL_DEFAULT_TAG","_FormLabel","forwardedRef","HTMLLabelElement","formControlProps","labelProps","htmlFor","root","indicator","fontWeight","fontWeightMedium","color","gray500","fontWeightNormal","spacing2Xs","getCounterStyles","Boolean","length","flexShrink","paddingLeft","textAlign","OriginalRadio","RadioGroup","CompoundRadio","_Radio","_RadioGroup","OriginalTextInput","InputGroup","CompoundTextInput","BaseInput","_TextInput","contextMaxLength","contextInputValue","handleOnChange","target","BaseInputProps","FocusEvent","KeyboardEvent","ChangeEvent","getInputStyles","BaseInputInternalProps","INPUT_DEFAULT_TAG","_BaseInput","HTMLTextAreaElement","placeholder","style","icon","resize","handleChange","nativeEvent","code","currentTarget","iconContent","iconPlaceholder","cloneElement","variant","inputContent","iconClassName","rootComponentWithIcon","inputWithIcon","getSizeStyles","padding","maxHeight","insetBoxShadowDefault","gray100","red600","gray700","fontFamily","fontStackPrimary","fontSize","fontSizeM","lineHeight","lineHeightM","glowNegative","pointerEvents","top","bottom","InputGroupSpacing","spacing","_InputGroup","inputGroup","GetStyleArguments","getInputGroupStyle","borderBottomLeftRadius","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","_Switch","_Textarea","disabled","error","colorNegative","OptionInternalProps","OriginalSelect","CompoundSelect","ChevronDownIcon","getSelectStyles","SelectSize","HTMLSelectElement","_Select","select","sizeStyles","spacingL","appearance","colorPrimary","textShadow","invalid","red300","right","FormEvent","_Form","onSubmit","HTMLFormElement","handleSubmit","preventDefault"],"version":3,"file":"module.js.map"}