{"mappings":"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","sources":["packages/components/asset/src/index.ts","packages/components/asset/src/Asset.tsx","packages/components/asset/src/AssetIcon/AssetIcon.tsx","packages/components/asset/src/AssetIcon/AssetIcon.styles.ts","packages/components/asset/src/Asset.styles.ts","packages/components/asset/src/types.ts"],"sourcesContent":["export { Asset } from './Asset';\nexport type { AssetProps, AssetStatus } from './Asset';\nexport { AssetIcon } from './AssetIcon/AssetIcon';\nexport type { AssetIconProps } from './AssetIcon/AssetIcon';\nexport type { AssetType } from './types';\nexport { isAssetType } from './types';\n","import React from 'react';\nimport { cx } from 'emotion';\nimport type {\n  EntityStatus,\n  PickUnion,\n  CommonProps,\n} from '@contentful/f36-core';\nimport { Text } from '@contentful/f36-typography';\nimport { Box, Flex } from '@contentful/f36-core';\n\nimport { AssetIcon } from './AssetIcon/AssetIcon';\nimport { getAssetStyles } from './Asset.styles';\nimport type { AssetType } from './types';\n\nexport type AssetStatus = PickUnion<\n  EntityStatus,\n  'archived' | 'changed' | 'deleted' | 'draft' | 'published'\n>;\n\nexport interface AssetProps extends CommonProps {\n  /**\n   * A `src` attribute to use for image assets\n   */\n  src?: string;\n  /**\n   * The publish status of the asset\n   */\n  status?: AssetStatus;\n  /**\n   * The title of the asset\n   */\n  title?: string;\n  /**\n   * The type of asset being represented\n   */\n  type?: AssetType;\n}\n\nfunction _Asset(\n  {\n    className,\n    src,\n    status,\n    testId = 'cf-ui-asset',\n    title,\n    type = 'image',\n    ...otherProps\n  }: AssetProps,\n  ref: React.Ref<any>,\n) {\n  const styles = getAssetStyles();\n  const isImage = src && src !== '' && type === 'image';\n\n  // Do not show image previews when publish status is archived\n  const showPreview = isImage && status !== 'archived';\n\n  return (\n    <Box\n      className={cx(styles.relative, className)}\n      testId={testId}\n      ref={ref}\n      {...otherProps}\n    >\n      {showPreview ? (\n        <>\n          <Flex\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            className={styles.height100}\n          >\n            <img className={styles.image} src={src} alt={title} />\n          </Flex>\n          {title && (\n            <div className={styles.titleContainer}>\n              <Text\n                className={styles.title}\n                fontColor=\"colorWhite\"\n                margin=\"spacingS\"\n                isTruncated\n              >\n                {title}\n              </Text>\n            </div>\n          )}\n        </>\n      ) : (\n        <Flex\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          paddingLeft=\"spacingS\"\n          paddingRight=\"spacingS\"\n          className={styles.height100}\n        >\n          <Flex\n            marginBottom=\"spacingM\"\n            marginTop=\"spacingM\"\n            justifyContent=\"center\"\n          >\n            <AssetIcon type={type} />\n          </Flex>\n          <Text isTruncated marginBottom=\"spacingM\" fontColor=\"gray600\">\n            {title}\n          </Text>\n        </Flex>\n      )}\n    </Box>\n  );\n}\n\n_Asset.displayName = 'Asset';\n\nexport const Asset = React.forwardRef(_Asset);\n","import React from 'react';\nimport {\n  ArchiveIcon,\n  AudioIcon,\n  CodeIllustrationIcon,\n  ImageIcon,\n  MarkupIcon,\n  PdfIcon,\n  PlaintextIcon,\n  RichtextIcon,\n  PresentationIcon,\n  SpreadsheetIcon,\n  VideoIcon,\n} from '@contentful/f36-icons';\nimport type { GeneratedIconProps } from '@contentful/f36-icon';\nimport type { AssetType } from '../types';\n\nimport { cx } from 'emotion';\nimport { getAssetIconStyles } from './AssetIcon.styles';\n\nexport interface AssetIconProps\n  extends Omit<GeneratedIconProps, 'illustration' | 'ref'> {\n  type?: AssetType;\n}\n\n/**\n * Renders only the Illustration that would represent this asset's type\n */\nexport const AssetIcon = ({\n  type = 'archive',\n  className,\n  testId = 'cf-ui-asset-icon',\n  ...otherProps\n}: AssetIconProps) => {\n  const styles = getAssetIconStyles();\n  const props = {\n    ...otherProps,\n    testId,\n    className: cx(styles.root, className),\n  };\n\n  switch (type) {\n    case 'audio':\n      return <AudioIcon {...props} />;\n    case 'code':\n      return <CodeIllustrationIcon {...props} />;\n    case 'image':\n      return <ImageIcon {...props} />;\n    case 'markup':\n      return <MarkupIcon {...props} />;\n    case 'pdf':\n      return <PdfIcon {...props} />;\n    case 'plaintext':\n      return <PlaintextIcon {...props} />;\n    case 'presentation':\n      return <PresentationIcon {...props} />;\n    case 'richtext':\n      return <RichtextIcon {...props} />;\n    case 'spreadsheet':\n      return <SpreadsheetIcon {...props} />;\n    case 'video':\n      return <VideoIcon {...props} />;\n    case 'archive':\n    default:\n      return <ArchiveIcon {...props} />;\n  }\n};\n\nAssetIcon.displayName = 'AssetIcon';\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getAssetIconStyles() {\n  return {\n    root: css({\n      display: 'inline-block',\n      width: '39px',\n      height: '39px',\n      'g, path': {\n        fill: tokens.gray600,\n      },\n    }),\n  };\n}\n","import tokens from '@contentful/f36-tokens';\nimport { css } from 'emotion';\n\nexport function getAssetStyles() {\n  return {\n    relative: css({\n      position: 'relative',\n    }),\n    height100: css({\n      height: '100%',\n    }),\n    image: css({\n      width: 'auto',\n      maxWidth: '100%',\n      maxHeight: '100%',\n    }),\n    titleContainer: css({\n      opacity: 0,\n      transition: `opacity ${tokens.transitionDurationDefault} ${tokens.transitionEasingDefault}`,\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      left: 0,\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      alignItems: 'flex-end',\n      boxSizing: 'border-box',\n      background: `linear-gradient(0deg, ${tokens.gray900} 0%, transparent calc(1rem * (100 / ${tokens.fontBaseDefault})), transparent 100% )`,\n      ':hover': { opacity: 1 },\n    }),\n    title: css({\n      bottom: 0,\n      left: 0,\n      right: 0,\n      position: 'absolute',\n    }),\n  };\n}\n","export const types = {\n  archive: 'archive',\n  audio: 'audio',\n  code: 'code',\n  image: 'image',\n  markup: 'markup',\n  pdf: 'pdf',\n  plaintext: 'plaintext',\n  presentation: 'presentation',\n  richtext: 'richtext',\n  spreadsheet: 'spreadsheet',\n  video: 'video',\n};\n\nexport function isAssetType(type: string): type is AssetType {\n  return Object.keys(types).includes(type);\n}\n\nexport type AssetType = keyof typeof types;\n"],"names":["Asset","AssetProps","AssetStatus","AssetIcon","AssetIconProps","AssetType","isAssetType","React","EntityStatus","PickUnion","CommonProps","Text","Box","Flex","getAssetStyles","src","status","title","type","_Asset","className","testId","otherProps","ref","Ref","styles","isImage","showPreview","relative","height100","image","titleContainer","displayName","forwardRef","ArchiveIcon","AudioIcon","CodeIllustrationIcon","ImageIcon","MarkupIcon","PdfIcon","PlaintextIcon","RichtextIcon","PresentationIcon","SpreadsheetIcon","VideoIcon","GeneratedIconProps","getAssetIconStyles","Omit","props","root","tokens","display","width","height","fill","gray600","opacity","transition","transitionDurationDefault","transitionEasingDefault","position","bottom","right","left","overflow","alignItems","boxSizing","background","gray900","fontBaseDefault","types","archive","audio","code","markup","pdf","plaintext","presentation","richtext","spreadsheet","video","Object","keys","includes"],"version":3,"file":"main.js.map"}