{"mappings":"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","sources":["packages/components/spinner/src/index.ts","packages/components/spinner/src/Spinner.tsx","packages/components/spinner/src/Spinner.styles.ts"],"sourcesContent":["export { Spinner } from './Spinner';\nexport type { SpinnerProps } from './Spinner';\n","import { cx, css } from 'emotion';\nimport React, { forwardRef } from 'react';\nimport tokens from '@contentful/f36-tokens';\nimport { Box } from '@contentful/f36-core';\nimport type {\n  CommonProps,\n  PropsWithHTMLElement,\n  ExpandProps,\n} from '@contentful/f36-core';\nimport type { SpinnerSize, SpinnerVariant } from './types';\nimport { getStyles } from './Spinner.styles';\n\nconst SPINNER_DEFAULT_TAG = 'div';\n\nconst variants: { [key in SpinnerVariant]: string } = {\n  default: tokens.gray700,\n  primary: tokens.colorPrimary,\n  white: tokens.colorWhite,\n};\n\nexport type SpinnerInternalProps = CommonProps & {\n  /**\n   * Determines the color that will be used in the `fill` property of the SVG\n   */\n  variant?: SpinnerVariant;\n  /**\n   * Allows resizing the spinner with any N value. The final size will be NxN pixels\n   */\n  customSize?: number;\n  /**\n   * Controls the size of the spinner. The default `medium` size is 20px wide,\n   * the `small` size is 14px wide, and the `large` size is 36px wide\n   */\n  size?: SpinnerSize;\n};\n\nexport type SpinnerProps = PropsWithHTMLElement<SpinnerInternalProps, 'div'>;\n\nexport const Spinner = forwardRef<HTMLDivElement, ExpandProps<SpinnerProps>>(\n  (\n    {\n      className,\n      customSize,\n      size = 'medium',\n      variant = 'default',\n      testId = 'cf-ui-spinner',\n      ...otherProps\n    },\n    forwardedRef,\n  ) => {\n    const styles = getStyles();\n    return (\n      <Box\n        as={SPINNER_DEFAULT_TAG}\n        display=\"inline-block\"\n        {...otherProps}\n        className={cx(styles.root({ size, customSize }), className)}\n        ref={forwardedRef}\n        testId={testId}\n      >\n        <svg\n          className={css({\n            display: 'block',\n            fill: variants[variant],\n          })}\n          viewBox=\"0 0 60 51\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Loadingâ€¦</title>\n          <g\n            className={styles.circle1Translate}\n            transform=\"translate(10,33.528168)\"\n          >\n            <g className={styles.circle1Scale}>\n              <circle r=\"6\" transform=\"translate(0,10.471832)\" />\n            </g>\n          </g>\n\n          <g\n            className={styles.circle2Translate}\n            transform=\"translate(30,33.528168)\"\n          >\n            <g className={styles.circle2Scale}>\n              <circle r=\"6\" transform=\"translate(0,10.471832)\" />\n            </g>\n          </g>\n\n          <g\n            className={styles.circle3Translate}\n            transform=\"translate(50,33.528168)\"\n          >\n            <g className={styles.circle3Scale}>\n              <circle r=\"6\" transform=\"translate(0,10.471832)\" />\n            </g>\n          </g>\n        </svg>\n      </Box>\n    );\n  },\n);\n\nSpinner.displayName = 'Spinner';\n","import { css, keyframes } from 'emotion';\nimport type { SpinnerSize } from './types';\n\nconst sizes: { [key in SpinnerSize]: string } = {\n  large: '36px',\n  medium: '20px',\n  small: '14px',\n};\n\nexport const getStyles = () => {\n  const animations = {\n    scale1: keyframes`\n    0% {\n      transform: scale(1, 1);\n    }\n    6.666667% {\n      transform: scale(1.5, 0.5);\n    }\n    13.333333% {\n      transform: scale(1, 1);\n    }\n    26.666667% {\n      transform: scale(1, 1);\n    }\n    33.333333% {\n      transform: scale(1, 1);\n    }\n    40% {\n      transform: scale(1, 1);\n    }\n    53.333333% {\n      transform: scale(1, 1);\n    }\n    60% {\n      transform: scale(1.5, 0.5);\n    }\n    66.666667% {\n      transform: scale(1, 1);\n    }\n    100% {\n      transform: scale(1, 1);\n    }\n  `,\n    scale2: keyframes`\n    0% {\n      transform: scale(1, 1);\n    }\n    13.333333% {\n      transform: scale(1, 1);\n    }\n    20% {\n      transform: scale(1.5, 0.5);\n    }\n    26.666667% {\n      transform: scale(1, 1);\n    }\n    40% {\n      transform: scale(1, 1);\n    }\n    46.666667% {\n      transform: scale(1, 1);\n    }\n    53.333333% {\n      transform: scale(1, 1);\n    }\n    66.666667% {\n      transform: scale(1, 1);\n    }\n    73.333333% {\n      transform: scale(1.5, 0.5);\n    }\n    80% {\n      transform: scale(1, 1);\n    }\n    100% {\n      transform: scale(1, 1);\n    }\n  `,\n    scale3: keyframes`\n    0% {\n      transform: scale(1, 1);\n    }\n    26.666667% {\n      transform: scale(1, 1);\n    }\n    33.333333% {\n      transform: scale(1.5, 0.5);\n    }\n    40% {\n      transform: scale(1, 1);\n    }\n    53.333333% {\n      transform: scale(1, 1);\n    }\n    60% {\n      transform: scale(1, 1);\n    }\n    66.666667% {\n      transform: scale(1, 1);\n    }\n    80% {\n      transform: scale(1, 1);\n    }\n    86.666667% {\n      transform: scale(1.5, 0.5);\n    }\n    93.333333% {\n      transform: scale(1, 1);\n    }\n    100% {\n      transform: scale(1, 1);\n    }\n  `,\n    translate1: keyframes`\n    0% {\n      transform: translate(10px, 33.528168px);\n    }\n    6.666667% {\n      transform: translate(10px, 41.764084px);\n    }\n    13.333333% {\n      transform: translate(10px, 33.528168px);\n    }\n    26.666667% {\n      transform: translate(10px, -2.651608px);\n    }\n    33.333333% {\n      transform: translate(10px, -4.471832px);\n    }\n    40% {\n      transform: translate(10px, -2.651608px);\n    }\n    53.333333% {\n      transform: translate(10px, 33.528168px);\n    }\n    60% {\n      transform: translate(10px, 41.764084px);\n    }\n    66.666667% {\n      transform: translate(10px, 33.528168px);\n    }\n    100% {\n      transform: translate(10px, 33.528168px);\n    }\n  `,\n    translate2: keyframes`\n    0% {\n      transform: translate(30px, 33.528168px);\n    }\n    13.333333% {\n      transform: translate(30px, 33.528168px);\n    }\n    20% {\n      transform: translate(30px, 41.764084px);\n    }\n    26.666667% {\n      transform: translate(30px, 33.528168px);\n    }\n    40% {\n      transform: translate(30px, -2.651608px);\n    }\n    46.666667% {\n      transform: translate(30px, -4.471832px);\n    }\n    53.333333% {\n      transform: translate(30px, -2.651608px);\n    }\n    66.666667% {\n      transform: translate(30px, 33.528168px);\n    }\n    73.333333% {\n      transform: translate(30px, 41.764084px);\n    }\n    80% {\n      transform: translate(30px, 33.528168px);\n    }\n    100% {\n      transform: translate(30px, 33.528168px);\n    }\n  `,\n    translate3: keyframes`\n    0% {\n      transform: translate(50px, 33.528168px);\n    }\n    26.666667% {\n      transform: translate(50px, 33.528168px);\n    }\n    33.333333% {\n      transform: translate(50px, 41.764084px);\n    }\n    40% {\n      transform: translate(50px, 33.528168px);\n    }\n    53.333333% {\n      transform: translate(50px, -2.651608px);\n    }\n    60% {\n      transform: translate(50px, -4.471832px);\n    }\n    66.666667% {\n      transform: translate(50px, -2.651608px);\n    }\n    80% {\n      transform: translate(50px, 33.528168px);\n    }\n    86.666667% {\n      transform: translate(50px, 41.764084px);\n    }\n    93.333333% {\n      transform: translate(50px, 33.528168px);\n    }\n    100% {\n      transform: translate(50px, 33.528168px);\n    }\n  `,\n  };\n\n  return {\n    root: (props: { size: SpinnerSize; customSize?: number }) =>\n      css({\n        height: props.customSize ? `${props.customSize}px` : undefined,\n        verticalAlign: 'middle',\n        width: props.customSize ? `${props.customSize}px` : sizes[props.size],\n      }),\n    circle1Scale: css({\n      animation: `${animations.scale1} 1s linear infinite normal forwards;`,\n    }),\n    circle2Scale: css({\n      animation: `${animations.scale2} 1s linear infinite normal forwards;`,\n    }),\n    circle3Scale: css({\n      animation: `${animations.scale3} 1s linear infinite normal forwards;`,\n    }),\n    circle1Translate: css({\n      animation: `${animations.translate1} 1s linear infinite normal forwards;`,\n    }),\n    circle2Translate: css({\n      animation: `${animations.translate2} 1s linear infinite normal forwards;`,\n    }),\n    circle3Translate: css({\n      animation: `${animations.translate3} 1s linear infinite normal forwards;`,\n    }),\n  };\n};\n"],"names":["Spinner","SpinnerProps","React","forwardRef","tokens","Box","CommonProps","PropsWithHTMLElement","ExpandProps","SpinnerSize","SpinnerVariant","getStyles","SPINNER_DEFAULT_TAG","variants","default","gray700","primary","colorPrimary","white","colorWhite","SpinnerInternalProps","variant","customSize","size","HTMLDivElement","className","testId","otherProps","forwardedRef","styles","root","display","fill","circle1Translate","circle1Scale","circle2Translate","circle2Scale","circle3Translate","circle3Scale","displayName","sizes","large","medium","small","animations","scale1","scale2","scale3","translate1","translate2","translate3","props","height","undefined","verticalAlign","width","animation"],"version":3,"file":"main.js.map"}