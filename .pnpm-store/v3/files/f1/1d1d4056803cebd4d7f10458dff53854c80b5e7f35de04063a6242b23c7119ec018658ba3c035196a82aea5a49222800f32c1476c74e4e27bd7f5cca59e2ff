{"mappings":"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","sources":["packages/components/notification/src/index.ts","packages/components/notification/src/Notification.tsx","packages/components/notification/src/NotificationsManager/index.ts","packages/components/notification/src/NotificationsManager/NotificationsManager.tsx","packages/components/notification/src/NotificationsManager/useAsyncState.ts","packages/components/notification/src/NotificationItem/index.ts","packages/components/notification/src/NotificationItem/NotificationItem.tsx","packages/components/notification/src/NotificationItem/NotificationItem.styles.ts","packages/components/notification/src/NotificationItem/NotificationItemContainer.tsx","packages/components/notification/src/NotificationsManager/NotificationsManager.styles.ts"],"sourcesContent":["export { Notification } from './Notification';\nexport type { NotificationsAPI } from './Notification';\nexport { NotificationItem } from './NotificationItem';\nexport type { NotificationItemProps } from './NotificationItem';\nexport type { NotificationVariant } from './types';\nexport { NotificationItemContainer } from './NotificationItem/NotificationItemContainer';\nexport type { NotificationItemContainerProps } from './NotificationItem/NotificationItemContainer';\nexport { NotificationsManager } from './NotificationsManager';\nexport type {\n  NotificationsManagerProps,\n  NotificationProps,\n} from './NotificationsManager';\n","/* global Promise */\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport {\n  NotificationsManager,\n  ShowAction,\n  CloseAction,\n  CloseAllAction,\n  SetPlacementAction,\n  SetDurationAction,\n  NotificationProps,\n  Placement,\n} from './NotificationsManager';\nimport { NotificationVariant, NotificationCta } from './types';\n\nexport interface NotificationsAPI {\n  success: ShowAction<Notification>;\n  error: ShowAction<Notification>;\n  show: ShowAction<Notification>;\n  close: CloseAction<void>;\n  closeAll: CloseAllAction<void>;\n  setPlacement: SetPlacementAction<void>;\n  setDuration: SetDurationAction<void>;\n}\n\nlet initiated = false;\nconst internalAPI: Partial<NotificationsAPI> = {};\n\nfunction registerAPI(fnName: string, fn: Function) {\n  internalAPI[fnName] = fn;\n}\n\nfunction createRoot(callback: () => void) {\n  const container = document.createElement('div');\n  document.body.appendChild(container);\n\n  render(<NotificationsManager register={registerAPI} />, container, callback);\n}\n\nfunction afterInit<PromiseValueType>(fn: Function) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]) => {\n    if (!initiated) {\n      initiated = true;\n      return new Promise<PromiseValueType>((resolve) => {\n        createRoot(() => {\n          resolve(fn(...args));\n        });\n      });\n    } else {\n      return Promise.resolve<PromiseValueType>(fn(...args));\n    }\n  };\n}\n\nconst show = (variant: NotificationVariant) => (\n  text: string,\n  settings?: {\n    duration?: number;\n    withClose?: boolean;\n    id?: string;\n    title?: string;\n    cta?: Partial<NotificationCta>;\n  },\n) => {\n  if (internalAPI.show) {\n    return internalAPI.show(text, {\n      ...(settings || {}),\n      variant,\n    });\n  }\n};\n\ntype ExternalShowAction<T> = (\n  text: string,\n  settings?: {\n    duration?: number;\n    withClose?: boolean;\n    id?: string;\n    title?: string;\n    cta?: Partial<NotificationCta>;\n  },\n) => T;\n\nexport const Notification: {\n  success: ExternalShowAction<Promise<NotificationProps>>;\n  error: ExternalShowAction<Promise<NotificationProps>>;\n  warning: ExternalShowAction<Promise<NotificationProps>>;\n  info: ExternalShowAction<Promise<NotificationProps>>;\n  close: CloseAction<Promise<void>>;\n  closeAll: CloseAllAction<Promise<void>>;\n  setPlacement: SetPlacementAction<Promise<void>>;\n  setDuration: SetDurationAction<Promise<void>>;\n} = {\n  success: afterInit<NotificationProps>(show('positive')),\n  error: afterInit<NotificationProps>(show('negative')),\n  warning: afterInit<NotificationProps>(show('warning')),\n  info: afterInit<NotificationProps>(show('primary')),\n  close: afterInit<void>((id: string | number) => {\n    if (internalAPI.close) {\n      return internalAPI.close(id);\n    }\n  }),\n  closeAll: afterInit<void>(() => {\n    if (internalAPI.closeAll) {\n      return internalAPI.closeAll();\n    }\n  }),\n  setPlacement: afterInit<void>(\n    (placement: Placement, params?: { offset: number }) => {\n      if (internalAPI.setPlacement) {\n        return internalAPI.setPlacement(placement, params);\n      }\n    },\n  ),\n  setDuration: afterInit<void>((duration: number) => {\n    if (internalAPI.setDuration) {\n      return internalAPI.setDuration(duration);\n    }\n  }),\n};\n","export * from './NotificationsManager';\n","import React, { useCallback, useState } from 'react';\nimport { cx } from 'emotion';\n\nimport { useAsyncState } from './useAsyncState';\nimport { NotificationCta, NotificationVariant } from '../types';\nimport { NotificationItemContainer } from '../NotificationItem';\nimport { getStyles } from './NotificationsManager.styles';\n\nexport type Placement = 'top' | 'bottom';\n\nexport interface NotificationProps {\n  id: string | number;\n  text: string;\n  onClose: Function;\n  duration?: number;\n  withClose: boolean;\n  isShown: boolean;\n  variant: NotificationVariant;\n  title?: string;\n  cta?: Partial<NotificationCta>;\n}\n\nexport type ShowAction<T> = (\n  text: string,\n  setting?: {\n    variant: NotificationVariant;\n    id?: string;\n    duration?: number;\n    withClose?: boolean;\n    title?: string;\n    cta?: Partial<NotificationCta>;\n  },\n) => T;\n\nexport type CloseAction<T> = (id: string | number) => T;\n\nexport type CloseAllAction<T> = () => T;\n\nexport type SetDurationAction<T> = (duration: number) => T;\n\nexport type SetPlacementAction<T> = (\n  placement: Placement,\n  params?: { offset: number },\n) => T;\n\nexport interface NotificationsManagerProps {\n  register: (name: string, callback: Function) => void;\n}\n\nlet uniqueId = 0;\n\nconst getUniqueId = (): number => {\n  uniqueId += 1;\n  return uniqueId;\n};\n\nexport const NotificationsManager = ({\n  register,\n}: NotificationsManagerProps): React.ReactElement => {\n  const [items, setItems] = useAsyncState<NotificationProps[]>([]);\n  const [placement, setPlacementState] = useState('bottom');\n  const [placementOffset, setPlacementOffset] = useState(20);\n  const [duration, setDuration] = useState(6000);\n  const styles = getStyles(placement, placementOffset);\n\n  const setPlacement: SetPlacementAction<void> = useCallback(\n    (placement, params?: { offset: number }) => {\n      if (placement === 'bottom' || placement === 'top') {\n        const placementOffset = params && params.offset ? params.offset : 20;\n        setPlacementState(placement);\n        setPlacementOffset(placementOffset);\n      }\n    },\n    [],\n  );\n\n  const close: CloseAction<void> = useCallback(\n    (id) => {\n      setItems(\n        items.current.map((item) => {\n          if (item.id !== id) {\n            return item;\n          }\n\n          return {\n            ...item,\n            isShown: false,\n          };\n        }),\n      );\n    },\n    [items, setItems],\n  );\n\n  const closeAndDelete = useCallback(\n    (id: string | number) => {\n      setItems(items.current.filter((item) => item.id !== id));\n    },\n    [items, setItems],\n  );\n\n  const closeAll: CloseAllAction<void> = useCallback(() => {\n    setItems(\n      items.current.map((item) => {\n        return {\n          ...item,\n          isShown: false,\n        };\n      }),\n    );\n  }, [items, setItems]);\n\n  const show: ShowAction<NotificationProps> = useCallback(\n    (text, settings) => {\n      const itemDuration =\n        settings && typeof settings.duration !== 'undefined' // Needed as 0 is falsy but 0 is valid to disable auto-closing a notification\n          ? settings.duration\n          : duration;\n      const variant = settings?.variant ? settings.variant : 'positive';\n\n      const withClose =\n        settings && typeof settings.withClose !== 'undefined'\n          ? settings.withClose\n          : true;\n\n      const notificationId = settings?.id ? settings.id : getUniqueId();\n\n      const notification = {\n        id: notificationId,\n        text,\n        onClose: () => closeAndDelete(notificationId),\n        duration: itemDuration,\n        withClose,\n        isShown: true,\n        variant,\n        title: settings?.title,\n        cta: settings?.cta,\n      };\n\n      const alreadyThere = items.current.find(\n        (item) => item.id === notification.id,\n      );\n\n      if (alreadyThere) {\n        return alreadyThere;\n      }\n\n      if (placement === 'top') {\n        setItems([notification, ...items.current]);\n      } else {\n        setItems([...items.current, notification]);\n      }\n\n      return notification;\n    },\n    [closeAndDelete, duration, items, placement, setItems],\n  );\n\n  register('close', close);\n  register('show', show);\n  register('closeAll', closeAll);\n  register('setPlacement', setPlacement);\n  register('setDuration', setDuration);\n\n  return (\n    <div\n      data-test-id=\"cf-notification-container\"\n      className={cx(styles.manager)}\n    >\n      <div className={cx(styles.container)}>\n        {items.current.map((item) => (\n          <NotificationItemContainer\n            variant={item.variant}\n            duration={item.duration}\n            key={item.id}\n            withCloseButton={item.withClose}\n            // eslint-disable-next-line react/jsx-handler-names\n            onClose={item.onClose}\n            isShown={item.isShown}\n            title={item.title}\n            cta={item.cta}\n          >\n            {item.text}\n          </NotificationItemContainer>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nNotificationsManager.displayName = 'NotificationsManager';\n","import { useRef, useState } from 'react';\n\n/**\n * An asyncronous state hook.\n *\n * Think of it as a slight modification of React's `useState` hook, where the\n * state returned is instead a `MutableRefObject` like you know it from the\n * `useRef` hook.\n *\n * @param value\n * @returns A tuple with the `MutableRefObject` and a function to set the state\n */\nexport function useAsyncState<ValueType>(\n  value: ValueType,\n): [React.MutableRefObject<ValueType>, (state: ValueType) => void] {\n  const ref = useRef<ValueType>(value);\n  const [, forceUpdate] = useState(false);\n\n  const setState = (newState: ValueType) => {\n    if (!Object.is(ref.current, newState)) {\n      ref.current = newState;\n      forceUpdate((state) => !state);\n    }\n  };\n\n  return [ref, setState];\n}\n","export { NotificationItem } from './NotificationItem';\nexport type { NotificationItemProps } from './NotificationItem';\nexport { NotificationItemContainer } from './NotificationItemContainer';\nexport type { NotificationItemContainerProps } from './NotificationItemContainer';\n","import React from 'react';\nimport { cx } from 'emotion';\nimport {\n  CheckCircleIcon,\n  ErrorCircleIcon,\n  WarningIcon,\n  CloseIcon,\n  InfoCircleIcon,\n} from '@contentful/f36-icons';\n\nimport { Button } from '@contentful/f36-button';\nimport { TextLink } from '@contentful/f36-text-link';\nimport { Flex, Box } from '@contentful/f36-core';\nimport type { ExpandProps, CommonProps } from '@contentful/f36-core';\nimport { Heading, Paragraph } from '@contentful/f36-typography';\n\nimport { NotificationVariant, NotificationCta } from '../types';\nimport { getStyles } from './NotificationItem.styles';\n\nexport interface NotificationItemProps extends CommonProps {\n  /**\n   * Defines the styling of notification\n   * @default positive\n   */\n  variant?: NotificationVariant;\n  /**\n   * Defines if the close button should be rendered\n   * @default true\n   */\n  withCloseButton?: boolean;\n  /**\n   * Function that will be triggered when close button is clicked\n   */\n  onClose?: Function;\n  /**\n   * Title of the notification\n   */\n  title?: string;\n  /**\n   * Content of the notificaiton\n   */\n  children: React.ReactNode;\n  /**\n   * Label and text-link props of the CTA\n   */\n  cta?: Partial<NotificationCta>;\n}\n\nconst _NotificationItem = (props: ExpandProps<NotificationItemProps>, ref) => {\n  const {\n    className,\n    children,\n    cta,\n    withCloseButton = true,\n    variant = 'positive',\n    onClose,\n    testId = 'cf-ui-notification',\n    title,\n    ...otherProps\n  } = props;\n\n  const styles = getStyles({ variant });\n\n  const iconSize = title ? 'medium' : 'small';\n  const iconVariants = {\n    positive: <CheckCircleIcon variant={variant} size={iconSize} />,\n    warning: <WarningIcon variant={variant} size={iconSize} />,\n    negative: <ErrorCircleIcon variant={variant} size={iconSize} />,\n    primary: <InfoCircleIcon variant={variant} size={iconSize} />,\n  };\n\n  const intents = {\n    positive: 'success',\n    warning: 'warning',\n    negative: 'error',\n    primary: 'info',\n  };\n\n  return (\n    <Flex\n      data-test-id={testId}\n      role=\"alert\"\n      data-intent={intents[variant]}\n      aria-live={variant === 'positive' ? 'polite' : 'assertive'}\n      className={cx(styles.wrapper, className)}\n      {...otherProps}\n      ref={ref}\n    >\n      <Box className={cx(styles.icon)}>{iconVariants[variant]}</Box>\n      <Box className={cx(styles.notification)}>\n        {title && (\n          <Heading\n            as=\"h2\"\n            className={cx(styles.title)}\n            marginBottom=\"spacingXs\"\n          >\n            {title}\n          </Heading>\n        )}\n        {children && (\n          <Paragraph className={styles.content} marginBottom=\"spacingXs\">\n            {children}\n          </Paragraph>\n        )}\n        {cta?.label && (\n          <TextLink\n            {...cta?.textLinkProps}\n            as={cta?.textLinkProps?.as || 'button'}\n          >\n            {cta.label}\n          </TextLink>\n        )}\n      </Box>\n      {withCloseButton && (\n        <Box>\n          <Button\n            className={cx(styles.closeButton)}\n            variant=\"transparent\"\n            startIcon={<CloseIcon />}\n            onClick={() => {\n              onClose && onClose();\n            }}\n            testId=\"cf-ui-notification-close\"\n            aria-label=\"Dismiss\"\n          />\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nexport const NotificationItem = React.forwardRef(_NotificationItem);\n","import { css } from 'emotion';\nimport type { CSSObject } from '@emotion/serialize';\nimport tokens from '@contentful/f36-tokens';\nimport { NotificationVariant } from '../types';\n\nconst variantColors = {\n  positive: tokens.green600,\n  negative: tokens.red600,\n  warning: tokens.orange400,\n  primary: tokens.blue600,\n};\n\nconst getWrapperStyle = ({ variant }) =>\n  css({\n    background: tokens.colorWhite,\n    borderRadius: tokens.borderRadiusMedium,\n    boxShadow: tokens.boxShadowHeavy,\n    boxSizing: 'border-box',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative',\n    padding: tokens.spacingM,\n    width: '100%',\n    '&:before': {\n      backgroundColor: variantColors[variant],\n      content: '\"\"',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      top: 0,\n      width: '2px',\n    },\n  });\n\nconst getIconStyle = ({ variant }) =>\n  css({\n    fill: variantColors[variant],\n    marginRight: tokens.spacingM,\n    alignItems: 'flex-start',\n  });\n\nconst notificationStyle: CSSObject = {\n  fontSize: tokens.fontSizeM,\n  lineHeight: tokens.lineHeightM,\n  width: '100%',\n};\n\nconst titleStyle: CSSObject = {\n  color: tokens.gray800,\n  fontSize: tokens.fontSizeL,\n  lineHeight: tokens.lineHeightL,\n};\n\nconst contentStyle: CSSObject = {\n  color: tokens.gray700,\n  '&:last-child': {\n    marginBottom: 0,\n  },\n};\n\nconst closeButtonStyle: CSSObject = {\n  marginBottom: `-${tokens.spacingXs}`,\n  marginRight: `-${tokens.spacingXs}`,\n  marginTop: `-${tokens.spacingXs}`,\n};\n\nexport const getStyles = ({ variant }: { variant: NotificationVariant }) => ({\n  wrapper: getWrapperStyle({ variant }),\n  icon: getIconStyle({ variant }),\n  notification: css(notificationStyle),\n  title: css(titleStyle),\n  content: css(contentStyle),\n  closeButton: css(closeButtonStyle),\n});\n","import React, { Component } from 'react';\nimport AnimateHeight from 'react-animate-height';\n\nimport { NotificationItem, NotificationItemProps } from './NotificationItem';\nimport { cx, css } from 'emotion';\n\nexport interface NotificationItemContainerProps extends NotificationItemProps {\n  duration?: number;\n  isShown?: boolean;\n}\n\nexport interface NotificationItemContainerState {\n  isShown: boolean;\n}\n\nconst defaultProps: Partial<NotificationItemContainerProps> = {\n  isShown: false,\n};\n\nexport class NotificationItemContainer extends Component<\n  NotificationItemContainerProps,\n  NotificationItemContainerState\n> {\n  static defaultProps = defaultProps;\n  displayName: 'NotificationItemContainer';\n\n  timer: number | null = null;\n\n  state = {\n    isShown: false,\n  };\n\n  componentDidMount() {\n    this.startTimer();\n    this.setState({ isShown: true });\n  }\n\n  componentDidUpdate(prevProps: NotificationItemContainerProps) {\n    if (prevProps.isShown !== this.props.isShown) {\n      this.setState({\n        isShown: this.props.isShown!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  startTimer = () => {\n    if (this.props.duration) {\n      if (this.props.duration === 0) return;\n\n      this.timer = window.setTimeout(() => {\n        this.handleClose();\n      }, this.props.duration);\n    }\n  };\n\n  stopTimer = () => {\n    if (this.props.duration === 0) return;\n\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  };\n\n  handleClose = () => {\n    this.stopTimer();\n    this.setState({ isShown: false });\n  };\n\n  handleMouseEnter = () => {\n    this.stopTimer();\n  };\n\n  handleMouseLeave = () => {\n    this.startTimer();\n  };\n\n  render() {\n    const { isShown, duration, ...otherProps } = this.props;\n    return (\n      <AnimateHeight\n        duration={200}\n        height={this.state.isShown ? 'auto' : 0}\n        easing=\"ease-in-out\"\n        animateOpacity\n        onAnimationEnd={() => {\n          if (this.state.isShown === false) {\n            if (this.props.onClose) {\n              this.props.onClose();\n            }\n          }\n        }}\n      >\n        <div\n          className={cx(css({ pointerEvents: 'all' }))}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          <NotificationItem {...otherProps} onClose={this.handleClose} />\n        </div>\n      </AnimateHeight>\n    );\n  }\n}\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const getStyles = (placement, placementOffset) => ({\n  manager: css({\n    left: 0,\n    margin: '0 auto',\n    maxWidth: '560px',\n    position: 'fixed',\n    pointerEvents: 'none',\n    right: 0,\n    [placement]: placementOffset,\n    zIndex: tokens.zIndexNotification,\n  }),\n  container: css({\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 auto',\n    maxWidth: '560px',\n    minWidth: '360px',\n    '& > div': {\n      marginBottom: placement === 'top' ? 0 : tokens.spacingS,\n      marginTop: placement === 'top' ? tokens.spacingS : 0,\n    },\n  }),\n});\n"],"names":["Notification","NotificationsAPI","NotificationItem","NotificationItemProps","NotificationVariant","NotificationItemContainer","NotificationItemContainerProps","NotificationsManager","NotificationsManagerProps","NotificationProps","React","render","ShowAction","CloseAction","CloseAllAction","SetPlacementAction","SetDurationAction","Placement","NotificationCta","success","error","show","close","closeAll","setPlacement","setDuration","initiated","internalAPI","Partial","registerAPI","fnName","fn","Function","createRoot","callback","container","document","createElement","body","appendChild","afterInit","args","Promise","PromiseValueType","resolve","variant","text","settings","duration","withClose","id","title","cta","ExternalShowAction","T","warning","info","placement","params","offset","useCallback","useState","useAsyncState","getStyles","onClose","isShown","setting","register","name","uniqueId","getUniqueId","ReactElement","items","setItems","setPlacementState","placementOffset","setPlacementOffset","styles","current","map","item","closeAndDelete","filter","itemDuration","notificationId","notification","alreadyThere","find","manager","displayName","useRef","value","ValueType","MutableRefObject","state","ref","forceUpdate","setState","newState","Object","is","CheckCircleIcon","ErrorCircleIcon","WarningIcon","CloseIcon","InfoCircleIcon","Button","TextLink","Flex","Box","ExpandProps","CommonProps","Heading","Paragraph","withCloseButton","children","ReactNode","_NotificationItem","props","className","testId","otherProps","iconSize","iconVariants","positive","negative","primary","intents","wrapper","icon","content","label","textLinkProps","as","closeButton","forwardRef","CSSObject","tokens","variantColors","green600","red600","orange400","blue600","getWrapperStyle","background","colorWhite","borderRadius","borderRadiusMedium","boxShadow","boxShadowHeavy","boxSizing","display","overflow","position","padding","spacingM","width","backgroundColor","height","left","top","getIconStyle","fill","marginRight","alignItems","notificationStyle","fontSize","fontSizeM","lineHeight","lineHeightM","titleStyle","color","gray800","fontSizeL","lineHeightL","contentStyle","gray700","marginBottom","closeButtonStyle","spacingXs","marginTop","Component","AnimateHeight","NotificationItemContainerState","defaultProps","timer","componentDidMount","startTimer","componentDidUpdate","prevProps","componentWillUnmount","stopTimer","window","setTimeout","handleClose","clearTimeout","handleMouseEnter","handleMouseLeave","margin","maxWidth","pointerEvents","right","zIndex","zIndexNotification","flexDirection","minWidth","spacingS"],"version":3,"file":"module.js.map"}