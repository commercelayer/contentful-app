var $hVoOH$emotion = require("emotion");
var $hVoOH$react = require("react");
var $hVoOH$downshift = require("downshift");
var $hVoOH$contentfulf36core = require("@contentful/f36-core");
var $hVoOH$contentfulf36button = require("@contentful/f36-button");
var $hVoOH$contentfulf36forms = require("@contentful/f36-forms");
var $hVoOH$contentfulf36icons = require("@contentful/f36-icons");
var $hVoOH$contentfulf36skeleton = require("@contentful/f36-skeleton");
var $hVoOH$contentfulf36popover = require("@contentful/f36-popover");
var $hVoOH$contentfulf36typography = require("@contentful/f36-typography");
var $hVoOH$contentfulf36utils = require("@contentful/f36-utils");
var $hVoOH$contentfulf36tokens = require("@contentful/f36-tokens");

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

$parcel$export(module.exports, "Autocomplete", () => $56e6e764f18116b7$export$2f2b9559550c7bbc);
















const $e938248654439d1d$export$71b73d9f7d678746 = (listMaxHeight)=>({
        autocomplete: /*#__PURE__*/ $hVoOH$emotion.css({
            name: "1jke4yk",
            styles: "position:relative;width:100%;"
        }),
        combobox: /*#__PURE__*/ $hVoOH$emotion.css({
            name: "79elbk",
            styles: "position:relative;"
        }),
        inputField: /*#__PURE__*/ $hVoOH$emotion.css({
            paddingRight: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingXl,
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap'
        }),
        toggleButton: /*#__PURE__*/ $hVoOH$emotion.css({
            position: 'absolute',
            top: '1px',
            right: '1px',
            zIndex: 1,
            padding: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacing2Xs,
            height: '38px'
        }),
        content: /*#__PURE__*/ $hVoOH$emotion.css({
            overflow: 'auto',
            maxHeight: `${listMaxHeight}px`
        }),
        list: /*#__PURE__*/ $hVoOH$emotion.css({
            listStyle: 'none',
            padding: `${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingXs} 0`,
            margin: 0
        }),
        groupTitle: /*#__PURE__*/ $hVoOH$emotion.css({
            padding: `${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingXs} ${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingM}`,
            lineHeight: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).lineHeightM
        }),
        noMatchesTitle: /*#__PURE__*/ $hVoOH$emotion.css({
            color: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).gray500,
            margin: `${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingM} 0 ${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingM} 0`
        }),
        item: /*#__PURE__*/ $hVoOH$emotion.css({
            display: 'block',
            padding: `${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingXs} ${($parcel$interopDefault($hVoOH$contentfulf36tokens)).spacingM}`,
            wordBreak: 'break-word',
            whiteSpace: 'break-spaces',
            cursor: 'pointer',
            hyphens: 'auto',
            '&:focus, &:hover': {
                backgroundColor: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).gray100
            },
            '&:active': {
                backgroundColor: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).gray200
            }
        }),
        disabled: /*#__PURE__*/ $hVoOH$emotion.css({
            name: "1e07izz",
            styles: "opacity:0.5;pointer-events:none;"
        }),
        highlighted: /*#__PURE__*/ $hVoOH$emotion.css({
            backgroundColor: ($parcel$interopDefault($hVoOH$contentfulf36tokens)).gray100
        })
    })
;


const $26b30f0765231b47$export$4db5c29873bb228f = (props)=>{
    const { items: items , elementStartIndex: elementStartIndex , highlightedIndex: highlightedIndex , getItemProps: getItemProps , renderItem: renderItem , inputValue: inputValue , listMaxHeight: listMaxHeight = 180  } = props;
    const styles = $e938248654439d1d$export$71b73d9f7d678746(listMaxHeight);
    return /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("ul", {
        className: styles.list,
        "data-test-id": "cf-autocomplete-list"
    }, items.map((item, index)=>{
        const itemIndex = elementStartIndex + index;
        const itemProps = getItemProps({
            item: item,
            index: itemIndex
        });
        return /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36typography.Text, {
            ...itemProps,
            as: "li",
            key: itemIndex,
            className: $hVoOH$emotion.cx([
                styles.item,
                highlightedIndex === itemIndex && styles.highlighted
            ]),
            "data-test-id": `cf-autocomplete-list-item-${itemIndex}`
        }, renderItem ? renderItem(item, inputValue) : typeof item === 'string' ? /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($26b30f0765231b47$var$HighlightedItem, {
            item: item,
            inputValue: inputValue
        }) : item);
    }));
};
$26b30f0765231b47$export$4db5c29873bb228f.displayName = 'AutocompleteItems';
function $26b30f0765231b47$var$HighlightedItem({ item: item , inputValue: inputValue  }) {
    const { before: before , match: match , after: after  } = $hVoOH$contentfulf36utils.getStringMatch(item, inputValue);
    return /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement(($parcel$interopDefault($hVoOH$react)).Fragment, null, before, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("b", null, match), after);
}
$26b30f0765231b47$var$HighlightedItem.displayName = 'HighlightedItem';



function $56e6e764f18116b7$var$_Autocomplete(props, ref) {
    const { id: id , className: className , clearAfterSelect: clearAfterSelect = false , closeAfterSelect: closeAfterSelect = true , defaultValue: defaultValue = '' , selectedItem: selectedItem1 , items: items , onInputValueChange: onInputValueChange , onSelectItem: onSelectItem , renderItem: renderItem , icon: icon = /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36icons.ChevronDownIcon, {
        variant: "muted"
    }) , itemToString: itemToString = (item)=>item
     , isInvalid: isInvalid , isDisabled: isDisabled , isRequired: isRequired , isReadOnly: isReadOnly , noMatchesMessage: noMatchesMessage = 'No matches found' , placeholder: placeholder = 'Search' , inputRef: inputRef , toggleRef: toggleRef , listRef: listRef , listWidth: listWidth = 'auto' , listMaxHeight: listMaxHeight = 180 , isGrouped: isGrouped = false , isLoading: isLoading = false , usePortal: usePortal = false , testId: testId = 'cf-autocomplete'  } = props;
    const styles = $e938248654439d1d$export$71b73d9f7d678746(listMaxHeight);
    const [inputValue1, setInputValue] = $hVoOH$react.useState(defaultValue);
    const handleInputValueChange = $hVoOH$react.useCallback((value)=>{
        setInputValue(value);
        onInputValueChange === null || onInputValueChange === void 0 ? void 0 : onInputValueChange(value);
    }, [
        onInputValueChange
    ]); // Handle manually to avoid a jumping cursor, see https://github.com/downshift-js/downshift/issues/1108#issuecomment-842407759
    const handleNativeChangeEvent = $hVoOH$react.useCallback((event)=>{
        const value = event.target.value;
        handleInputValueChange(value);
    }, [
        handleInputValueChange
    ]);
    const flattenItems = $56e6e764f18116b7$var$isUsingGroups(isGrouped, items) ? items.reduce((acc, group)=>[
            ...acc,
            ...group.options
        ]
    , []) : items;
    const isShowingNoMatches = $56e6e764f18116b7$var$isUsingGroups(isGrouped, items) ? items.every((group)=>group.options.length === 0
    ) : items.length === 0;
    const { getComboboxProps: getComboboxProps , getInputProps: getInputProps , getItemProps: getItemProps , getMenuProps: getMenuProps , getToggleButtonProps: getToggleButtonProps , highlightedIndex: highlightedIndex , isOpen: isOpen , toggleMenu: toggleMenu  } = $hVoOH$downshift.useCombobox({
        items: flattenItems,
        selectedItem: selectedItem1,
        inputValue: inputValue1,
        itemToString: itemToString,
        onInputValueChange: ({ type: type , inputValue: inputValue  })=>{
            if (type !== '__input_change__') handleInputValueChange(inputValue);
        },
        onStateChange: ({ type: type , selectedItem: selectedItem  })=>{
            switch(type){
                case $hVoOH$downshift.useCombobox.stateChangeTypes.InputKeyDownEnter:
                case $hVoOH$downshift.useCombobox.stateChangeTypes.ItemClick:
                    if (selectedItem) onSelectItem(selectedItem);
                    if (clearAfterSelect) handleInputValueChange('');
                    if (!closeAfterSelect) toggleMenu();
                    break;
                default:
                    break;
            }
        }
    });
    const { 'aria-labelledby': _labelledby , id: _inputId , ...inputProps } = getInputProps();
    const comboboxProps = getComboboxProps();
    const toggleProps = getToggleButtonProps();
    const menuProps = getMenuProps();
    let elementStartIndex = 0;
    return /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("div", {
        "data-test-id": testId,
        className: $hVoOH$emotion.cx(styles.autocomplete, className),
        ref: ref
    }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36popover.Popover, {
        usePortal: usePortal,
        isOpen: isOpen,
        isFullWidth: listWidth === 'full',
        renderOnlyWhenOpen: false,
        // and the user won't be able to type in the input
        // eslint-disable-next-line jsx-a11y/no-autofocus
        autoFocus: false,
        id: menuProps.id
    }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36popover.Popover.Trigger, null, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("div", {
        ...comboboxProps,
        className: styles.combobox
    }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36forms.TextInput, {
        className: styles.inputField,
        ...inputProps,
        onFocus: ()=>{
            if (!isOpen) toggleMenu();
        },
        id: id,
        isInvalid: isInvalid,
        isDisabled: isDisabled,
        isRequired: isRequired,
        isReadOnly: isReadOnly,
        ref: $hVoOH$contentfulf36core.mergeRefs(inputProps.ref, inputRef),
        testId: "cf-autocomplete-input",
        placeholder: placeholder,
        onChange: (event)=>{
            inputProps.onChange(event);
            handleNativeChangeEvent(event);
        }
    }), /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36button.IconButton, {
        ...toggleProps,
        ref: $hVoOH$contentfulf36core.mergeRefs(toggleProps.ref, toggleRef),
        "aria-label": inputValue1 ? 'Clear' : 'Show list',
        className: styles.toggleButton,
        variant: "transparent",
        icon: inputValue1 ? /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36icons.CloseIcon, {
            variant: "muted"
        }) : icon,
        onClick: ()=>{
            if (inputValue1) handleInputValueChange('');
            else toggleMenu();
        },
        isDisabled: isDisabled,
        size: "small"
    }))), /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36popover.Popover.Content, {
        ...menuProps,
        ref: $hVoOH$contentfulf36core.mergeRefs(menuProps.ref, listRef),
        className: styles.content,
        testId: "cf-autocomplete-container"
    }, isLoading && [
        ...Array(3)
    ].map((_, index)=>/*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("div", {
            key: index,
            className: $hVoOH$emotion.cx(styles.item, styles.disabled)
        }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($56e6e764f18116b7$var$ListItemLoadingState, null))
    ), !isLoading && isShowingNoMatches && /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("div", {
        className: styles.item
    }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36typography.Subheading, {
        className: styles.noMatchesTitle
    }, noMatchesMessage)), !isLoading && $56e6e764f18116b7$var$isUsingGroups(isGrouped, items) && items.map((group, index)=>{
        if (group.options.length < 1) return;
        const render = /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement("div", {
            key: index
        }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36typography.SectionHeading, {
            key: index,
            "data-test-id": "cf-autocomplete-grouptitle",
            marginBottom: "none",
            className: styles.groupTitle
        }, group.groupTitle), /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($26b30f0765231b47$export$4db5c29873bb228f, {
            items: group.options,
            highlightedIndex: highlightedIndex,
            getItemProps: getItemProps,
            renderItem: renderItem,
            inputValue: inputValue1,
            elementStartIndex: elementStartIndex
        }));
        elementStartIndex += group.options.length;
        return render;
    }), !isLoading && !$56e6e764f18116b7$var$isUsingGroups(isGrouped, items) && items.length > 0 && /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($26b30f0765231b47$export$4db5c29873bb228f, {
        items: items,
        elementStartIndex: elementStartIndex,
        highlightedIndex: highlightedIndex,
        getItemProps: getItemProps,
        renderItem: renderItem,
        inputValue: inputValue1
    }))));
}
const $56e6e764f18116b7$var$ListItemLoadingState = ()=>{
    return /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36skeleton.SkeletonContainer, {
        svgHeight: 16
    }, /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).createElement($hVoOH$contentfulf36skeleton.SkeletonBodyText, {
        numberOfLines: 1
    }));
}; // This is required to infer correct typings when differentiating groups and items
function $56e6e764f18116b7$var$isUsingGroups(isGrouped, items) {
    return isGrouped;
}
const $56e6e764f18116b7$export$2f2b9559550c7bbc = /*#__PURE__*/ ($parcel$interopDefault($hVoOH$react)).forwardRef($56e6e764f18116b7$var$_Autocomplete);




//# sourceMappingURL=main.js.map
